<?xml version="1.0"?>
<s:MXItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
                  xmlns:s="library://ns.adobe.com/flex/spark"
                  rollOver="onRollOverOut(event)" rollOut="onRollOverOut(event)" height="25">
    <s:layout>
        <s:HorizontalLayout paddingLeft="5" paddingRight="5" gap="0" verticalAlign="middle"/>
    </s:layout>
    <s:Label id="labelDisplay" paddingRight="10" width="100%" maxDisplayedLines="1" showTruncationTip="true"/>
    <s:Image id="copy" source="{copyIcon}" width="15" height="16"
             verticalCenter="0" buttonMode="true" visible="false" includeInLayout="false"
             click="onImageClick(event)"/>
    <fx:Script><![CDATA[
        import actionScripts.factory.FileLocation;
        import actionScripts.locator.IDEModel;
        import mx.controls.DataGrid;
        import mx.controls.dataGridClasses.DataGridColumn;

        [Embed(source="/elements/images/copy_content_icon.png")]
        [Bindable]
        private var copyIcon:Class;

        override public function set data(value:Object):void
        {
            super.data = value;
            if (value)
            {
                label = listData.label;
                var dataGrid:DataGrid = listData.owner as DataGrid;
                if(dataGrid)
                {
                    var column:DataGridColumn = dataGrid.columns[listData.columnIndex];
                    toolTip = column.itemToDataTip(value);
                }
                else
                {
                    toolTip = null;
                }
            }
        }

        private function onImageClick(event:MouseEvent):void
        {
            event.stopImmediatePropagation();

            IDEModel.getInstance().clipboardCore.copyText(getValueToCopy());
        }

        private function onRollOverOut(event:MouseEvent):void
        {
            copy.visible = copy.includeInLayout = event.type == MouseEvent.ROLL_OVER;
        }

        public function getValueToCopy():String
        {
            if (data)
            {
                var dataField:String = listData['dataField'];
                return data[dataField];
            }

            return null;
        }
        ]]></fx:Script>
</s:MXItemRenderer>
