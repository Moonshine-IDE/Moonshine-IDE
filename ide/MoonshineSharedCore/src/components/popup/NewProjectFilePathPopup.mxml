<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
//  Copyright (C) STARTcloud, Inc. 2015-2022. All rights reserved.
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the Server Side Public License, version 1,
//  as published by MongoDB, Inc.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
//  Server Side Public License for more details.
//
//  You should have received a copy of the Server Side Public License
//  along with this program. If not, see
//
//  http://www.mongodb.com/licensing/server-side-public-license
//
//  As a special exception, the copyright holders give permission to link the
//  code of portions of this program with the OpenSSL library under certain
//  conditions as described in each individual source file and distribute
//  linked combinations including the program with the OpenSSL library. You
//  must comply with the Server Side Public License in all respects for
//  all of the code used other than as permitted herein. If you modify file(s)
//  with this exception, you may extend this exception to your version of the
//  file(s), but you are not obligated to do so. If you do not wish to do so,
//  delete this exception statement from your version. If you delete this
//  exception statement from all source files in the program, then also delete
//  it in the license file.
//
////////////////////////////////////////////////////////////////////////////////
-->
<resizableTitleWindow:ResizableTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
										   xmlns:s="library://ns.adobe.com/flex/spark"
										   xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:utils="actionScripts.utils.*"
										   backgroundColor="0xf5f5f5"
										   width="500" minWidth="400" height="300" minHeight="300"
										   creationComplete="onNewProjectFilePathCreationComplete(event)"
										   xmlns:resizableTitleWindow="actionScripts.ui.resizableTitleWindow.*"
										   skinClass="components.skins.ResizableTitleWindowSkin">
	<fx:Metadata>
		[Event(name="EVENT_NEW_FILE", type="actionScripts.events.NewFileEvent")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
		import actionScripts.valueObjects.FileWrapper;

		import mx.events.FlexEvent;

		import actionScripts.events.NewFileEvent;
		import actionScripts.locator.IDEModel;

		public var folderWrapper:FileWrapper;

		[Bindable]
		private var model:IDEModel = IDEModel.getInstance();

		protected function onProjectCreateButton(event:MouseEvent):void
		{
			selectMainProjectFile();
		}

		private function onFileSelectedDoubleClick(event:MouseEvent):void
		{
			selectMainProjectFile();
		}

		protected function onNewProjectFilePathCreationComplete(event:FlexEvent):void
		{
			title = "Main application file";
			// probable termination
			if(!folderWrapper)
			{
				hgExistingWarning.visible = true;
				return;
			}

			tree.dataProvider = folderWrapper;

			if(!folderWrapper.children || folderWrapper.children.length == 0)
			{
				hgExistingWarning.visible = true;
			}
		}

		private function getIconForFile(object:Object):Class
		{
			return null;
		}

		private function selectMainProjectFile():void
		{
			var tmpEvent:NewFileEvent = new NewFileEvent(NewFileEvent.EVENT_FILE_SELECTED, tree.selectedItem.nativePath);
			dispatchEvent(tmpEvent);

			super.closeThis();
		}
		]]>
	</fx:Script>
	<fx:Declarations>
		<mx:StringValidator id="sValidator" property="text"/>
		<s:RadioButtonGroup id="rgModifiersA"/>
	</fx:Declarations>
	
	<s:VGroup height="100%" width="100%" 
			  gap="10" paddingLeft="12" paddingBottom="3" paddingTop="9" paddingRight="13"
			  horizontalAlign="center">
		<utils:CustomTree id="tree"
								 width="100%" height="100%"
								 color="0xEEEEEE"
								 contentBackgroundColor="0x0"
								 rollOverColor="0x393939"
								 selectionColor="0xc165b8"
								 alternatingItemColors="[0x444444, 0x4d4c4c]"
								 verticalScrollBarStyleName="black"
								 borderVisible="false"
								 rowHeight="18"
								 useRollOver="true"
								 labelField="name"
						  		 iconFunction="{getIconForFile}"
								 itemRenderer="actionScripts.ui.renderers.GenericTreeItemRenderer"
								 doubleClickEnabled="true"
								 doubleClick="onFileSelectedDoubleClick(event)"/>
		<s:HGroup id="hgExistingWarning" 
				  width="100%" verticalAlign="middle" visible="false">
			<s:Image source="@Embed('/elements/images/iconExclamationRed.png')"/>
			<s:Label text="Source file should be immediate children of main source folder" width="100%"/>
		</s:HGroup>
	</s:VGroup>
	
	<resizableTitleWindow:controlBarContent>
		<s:Button id="btnCreate" label="Select"
				  styleName="darkButton"
				  click="onProjectCreateButton(event)" enabled="{tree.selectedIndex != -1}"/>
	</resizableTitleWindow:controlBarContent>
</resizableTitleWindow:ResizableTitleWindow>