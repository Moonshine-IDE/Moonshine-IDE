<?xml version="1.0" encoding="utf-8"?>
<j:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:j="library://ns.apache.org/royale/jewel"
		  xmlns:js="library://ns.apache.org/royale/basic" 
		  xmlns:html="library://ns.apache.org/royale/html"
		  xmlns:joditeditor="classes.joditeditor.*" xmlns:components="views.components.*"
		  itemsVerticalAlign="itemsCenter" itemsHorizontalAlign="itemsCenter" className="bodyPadding"
		  initComplete="onInitCompletes()">
	<fx:Metadata>
		[Event(name="eventNavigateTo", type="classes.events.ScreenEvent")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import classes.events.ScreenEvent;
			import classes.events.ErrorEvent;
            import org.apache.royale.jewel.Snackbar;
            import org.apache.royale.events.Event;
			%ImportStatements%
			
			public static const NAME:String = "%ViewComponentName%";

			private var proxy:$moduleNameProxy = $moduleNameProxy.getInstance();

			private function onInitCompletes():void
            {
                proxy.addEventListener($moduleNameProxy.EVENT_ITEM_SELECTED, onItemBeingSelected);
                proxy.addEventListener($moduleNameProxy.EVENT_ITEM_UPDATED, onItemBeingUpdated);
                proxy.addEventListener(ErrorEvent.SERVER_ERROR, onSubmitError);
            }

            private function onItemBeingSelected(event:Event):void
            {
                if (proxy.selectedItem != null)
                {
                    %ProxyValuesToComponentCodes%
                }
            }
					
			private function onBackRequest(event:MouseEvent):void
			{
			    reset();
				dispatchEvent(new ScreenEvent(ScreenEvent.EVENT_NAVIGATE_TO, %ListingComponentName%.NAME));
			}

			private function onFormValid(event:Event):void
            {
                resetErrorMessage();

                %ComponentValuesToProxyCodes%
            }

            private function onItemBeingUpdated(event:Event):void
            {
                onBackRequest(null);
            }

            private function onSubmitError(event:ErrorEvent):void
            {
                lblError.visible = true;
                lblError.text = event.errorMessage;
                if (event.errors && (event.errors is Array))
                {
                    lblError.text += "\n";
                    for (var i:int=0; i < event.errors.length; i++)
                    {
                        lblError.text += "\n"+ event.errors[i].message;
                    }
                }
            }

            private function reset():void
            {
                resetErrorMessage();

                %FormResetCodes%
            }

            private function resetErrorMessage():void
            {
                lblError.text = null;
                lblError.visible = false;
            }
			
		]]>
	</fx:Script>
	<j:beads>
		<js:ContainerDataBinding />
	</j:beads>
	
	<html:H2 text="Add/Edit to %FormName%"/>
	
	<js:HRule percentWidth="100"/>
	<j:Spacer height="20"/>
	
	<j:Form valid="onFormValid(event)">
		<j:beads>
			<j:FormValidator id="formValidator" trigger="{btnSubmit}" triggerEvent="click" 
							 requiredFieldError="At least one field has a validation error. Please correct the problem and submit again."/>
		</j:beads>
		%FormItems%
	</j:Form>

	<j:Label localId="lblError"
	    multiline="true" className="errorText" visible="false"/>

	<j:Spacer height="20"/>
	
	<j:HGroup itemsHorizontalAlign="itemsCenter" gap="3" percentWidth="100">
		<j:IconButton id="btnSubmit" text="Submit">
			<j:icon>
				<js:MaterialIcon text="{MaterialIconType.UPDATE}" />
			</j:icon>
		</j:IconButton>
		<j:IconButton text="Cancel"
			click="onBackRequest(event)">
			<j:icon>
				<js:MaterialIcon text="{MaterialIconType.ARROW_BACK}" />
			</j:icon>
		</j:IconButton>
	</j:HGroup>
</j:VGroup>