/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"debugProtocol.js","sourceRoot":"","sources":["../src/debugProtocol.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;AAEhG,YAAY,CAAC","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\n/** Declaration module describing the VS Code debug protocol.\n\tAuto-generated from json schema. Do not edit manually.\n*/\nexport module DebugProtocol {\n\n\t/** Base class of requests, responses, and events. */\n\texport interface ProtocolMessage {\n\t\t/** Sequence number (also known as message ID). For protocol messages of type 'request' this ID can be used to cancel the request. */\n\t\tseq: number;\n\t\t/** Message type.\n\t\t\tValues: 'request', 'response', 'event', etc.\n\t\t*/\n\t\ttype: 'request' | 'response' | 'event' | string;\n\t}\n\n\t/** A client or debug adapter initiated request. */\n\texport interface Request extends ProtocolMessage {\n\t\t// type: 'request';\n\t\t/** The command to execute. */\n\t\tcommand: string;\n\t\t/** Object containing arguments for the command. */\n\t\targuments?: any;\n\t}\n\n\t/** A debug adapter initiated event. */\n\texport interface Event extends ProtocolMessage {\n\t\t// type: 'event';\n\t\t/** Type of event. */\n\t\tevent: string;\n\t\t/** Event-specific information. */\n\t\tbody?: any;\n\t}\n\n\t/** Response for a request. */\n\texport interface Response extends ProtocolMessage {\n\t\t// type: 'response';\n\t\t/** Sequence number of the corresponding request. */\n\t\trequest_seq: number;\n\t\t/** Outcome of the request.\n\t\t\tIf true, the request was successful and the 'body' attribute may contain the result of the request.\n\t\t\tIf the value is false, the attribute 'message' contains the error in short form and the 'body' may contain additional information (see 'ErrorResponse.body.error').\n\t\t*/\n\t\tsuccess: boolean;\n\t\t/** The command requested. */\n\t\tcommand: string;\n\t\t/** Contains the raw error in short form if 'success' is false.\n\t\t\tThis raw error might be interpreted by the frontend and is not shown in the UI.\n\t\t\tSome predefined values exist.\n\t\t\tValues: \n\t\t\t'cancelled': request was cancelled.\n\t\t\tetc.\n\t\t*/\n\t\tmessage?: 'cancelled' | string;\n\t\t/** Contains request result if success is true and optional error details if success is false. */\n\t\tbody?: any;\n\t}\n\n\t/** On error (whenever 'success' is false), the body can provide more details. */\n\texport interface ErrorResponse extends Response {\n\t\tbody: {\n\t\t\t/** An optional, structured error message. */\n\t\t\terror?: Message;\n\t\t};\n\t}\n\n\t/** Cancel request; value of command field is 'cancel'.\n\t\tThe 'cancel' request is used by the frontend in two situations:\n\t\t- to indicate that it is no longer interested in the result produced by a specific request issued earlier\n\t\t- to cancel a progress sequence. Clients should only call this request if the capability 'supportsCancelRequest' is true.\n\t\tThis request has a hint characteristic: a debug adapter can only be expected to make a 'best effort' in honouring this request but there are no guarantees.\n\t\tThe 'cancel' request may return an error if it could not cancel an operation but a frontend should refrain from presenting this error to end users.\n\t\tA frontend client should only call this request if the capability 'supportsCancelRequest' is true.\n\t\tThe request that got canceled still needs to send a response back. This can either be a normal result ('success' attribute true)\n\t\tor an error response ('success' attribute false and the 'message' set to 'cancelled').\n\t\tReturning partial results from a cancelled request is possible but please note that a frontend client has no generic way for detecting that a response is partial or not.\n\t\t The progress that got cancelled still needs to send a 'progressEnd' event back.\n\t\t A client should not assume that progress just got cancelled after sending the 'cancel' request.\n\t*/\n\texport interface CancelRequest extends Request {\n\t\t// command: 'cancel';\n\t\targuments?: CancelArguments;\n\t}\n\n\t/** Arguments for 'cancel' request. */\n\texport interface CancelArguments {\n\t\t/** The ID (attribute 'seq') of the request to cancel. If missing no request is cancelled.\n\t\t\tBoth a 'requestId' and a 'progressId' can be specified in one request.\n\t\t*/\n\t\trequestId?: number;\n\t\t/** The ID (attribute 'progressId') of the progress to cancel. If missing no progress is cancelled.\n\t\t\tBoth a 'requestId' and a 'progressId' can be specified in one request.\n\t\t*/\n\t\tprogressId?: string;\n\t}\n\n\t/** Response to 'cancel' request. This is just an acknowledgement, so no body field is required. */\n\texport interface CancelResponse extends Response {\n\t}\n\n\t/** Event message for 'initialized' event type.\n\t\tThis event indicates that the debug adapter is ready to accept configuration requests (e.g. SetBreakpointsRequest, SetExceptionBreakpointsRequest).\n\t\tA debug adapter is expected to send this event when it is ready to accept configuration requests (but not before the 'initialize' request has finished).\n\t\tThe sequence of events/requests is as follows:\n\t\t- adapters sends 'initialized' event (after the 'initialize' request has returned)\n\t\t- frontend sends zero or more 'setBreakpoints' requests\n\t\t- frontend sends one 'setFunctionBreakpoints' request (if capability 'supportsFunctionBreakpoints' is true)\n\t\t- frontend sends a 'setExceptionBreakpoints' request if one or more 'exceptionBreakpointFilters' have been defined (or if 'supportsConfigurationDoneRequest' is not defined or false)\n\t\t- frontend sends other future configuration requests\n\t\t- frontend sends one 'configurationDone' request to indicate the end of the configuration.\n\t*/\n\texport interface InitializedEvent extends Event {\n\t\t// event: 'initialized';\n\t}\n\n\t/** Event message for 'stopped' event type.\n\t\tThe event indicates that the execution of the debuggee has stopped due to some condition.\n\t\tThis can be caused by a break point previously set, a stepping request has completed, by executing a debugger statement etc.\n\t*/\n\texport interface StoppedEvent extends Event {\n\t\t// event: 'stopped';\n\t\tbody: {\n\t\t\t/** The reason for the event.\n\t\t\t\tFor backward compatibility this string is shown in the UI if the 'description' attribute is missing (but it must not be translated).\n\t\t\t\tValues: 'step', 'breakpoint', 'exception', 'pause', 'entry', 'goto', 'function breakpoint', 'data breakpoint', 'instruction breakpoint', etc.\n\t\t\t*/\n\t\t\treason: 'step' | 'breakpoint' | 'exception' | 'pause' | 'entry' | 'goto' | 'function breakpoint' | 'data breakpoint' | 'instruction breakpoint' | string;\n\t\t\t/** The full reason for the event, e.g. 'Paused on exception'. This string is shown in the UI as is and must be translated. */\n\t\t\tdescription?: string;\n\t\t\t/** The thread which was stopped. */\n\t\t\tthreadId?: number;\n\t\t\t/** A value of true hints to the frontend that this event should not change the focus. */\n\t\t\tpreserveFocusHint?: boolean;\n\t\t\t/** Additional information. E.g. if reason is 'exception', text contains the exception name. This string is shown in the UI. */\n\t\t\ttext?: string;\n\t\t\t/** If 'allThreadsStopped' is true, a debug adapter can announce that all threads have stopped.\n\t\t\t\t- The client should use this information to enable that all threads can be expanded to access their stacktraces.\n\t\t\t\t- If the attribute is missing or false, only the thread with the given threadId can be expanded.\n\t\t\t*/\n\t\t\tallThreadsStopped?: boolean;\n\t\t\t/** Ids of the breakpoints that triggered the event. In most cases there will be only a single breakpoint but here are some examples for multiple breakpoints:\n\t\t\t\t- Different types of breakpoints map to the same location.\n\t\t\t\t- Multiple source breakpoints get collapsed to the same instruction by the compiler/runtime.\n\t\t\t\t- Multiple function breakpoints with different function names map to the same location.\n\t\t\t*/\n\t\t\thitBreakpointIds?: number[];\n\t\t};\n\t}\n\n\t/** Event message for 'continued' event type.\n\t\tThe event indicates that the execution of the debuggee has continued.\n\t\tPlease note: a debug adapter is not expected to send this event in response to a request that implies that execution continues, e.g. 'launch' or 'continue'.\n\t\tIt is only necessary to send a 'continued' event if there was no previous request that implied this.\n\t*/\n\texport interface ContinuedEvent extends Event {\n\t\t// event: 'continued';\n\t\tbody: {\n\t\t\t/** The thread which was continued. */\n\t\t\tthreadId: number;\n\t\t\t/** If 'allThreadsContinued' is true, a debug adapter can announce that all threads have continued. */\n\t\t\tallThreadsContinued?: boolean;\n\t\t};\n\t}\n\n\t/** Event message for 'exited' event type.\n\t\tThe event indicates that the debuggee has exited and returns its exit code.\n\t*/\n\texport interface ExitedEvent extends Event {\n\t\t// event: 'exited';\n\t\tbody: {\n\t\t\t/** The exit code returned from the debuggee. */\n\t\t\texitCode: number;\n\t\t};\n\t}\n\n\t/** Event message for 'terminated' event type.\n\t\tThe event indicates that debugging of the debuggee has terminated. This does **not** mean that the debuggee itself has exited.\n\t*/\n\texport interface TerminatedEvent extends Event {\n\t\t// event: 'terminated';\n\t\tbody?: {\n\t\t\t/** A debug adapter may set 'restart' to true (or to an arbitrary object) to request that the front end restarts the session.\n\t\t\t\tThe value is not interpreted by the client and passed unmodified as an attribute '__restart' to the 'launch' and 'attach' requests.\n\t\t\t*/\n\t\t\trestart?: any;\n\t\t};\n\t}\n\n\t/** Event message for 'thread' event type.\n\t\tThe event indicates that a thread has started or exited.\n\t*/\n\texport interface ThreadEvent extends Event {\n\t\t// event: 'thread';\n\t\tbody: {\n\t\t\t/** The reason for the event.\n\t\t\t\tValues: 'started', 'exited', etc.\n\t\t\t*/\n\t\t\treason: 'started' | 'exited' | string;\n\t\t\t/** The identifier of the thread. */\n\t\t\tthreadId: number;\n\t\t};\n\t}\n\n\t/** Event message for 'output' event type.\n\t\tThe event indicates that the target has produced some output.\n\t*/\n\texport interface OutputEvent extends Event {\n\t\t// event: 'output';\n\t\tbody: {\n\t\t\t/** The output category. If not specified, 'console' is assumed.\n\t\t\t\tValues: 'console', 'stdout', 'stderr', 'telemetry', etc.\n\t\t\t*/\n\t\t\tcategory?: 'console' | 'stdout' | 'stderr' | 'telemetry' | string;\n\t\t\t/** The output to report. */\n\t\t\toutput: string;\n\t\t\t/** Support for keeping an output log organized by grouping related messages.\n\t\t\t\t'start': Start a new group in expanded mode. Subsequent output events are members of the group and should be shown indented.\n\t\t\t\tThe 'output' attribute becomes the name of the group and is not indented.\n\t\t\t\t'startCollapsed': Start a new group in collapsed mode. Subsequent output events are members of the group and should be shown indented (as soon as the group is expanded).\n\t\t\t\tThe 'output' attribute becomes the name of the group and is not indented.\n\t\t\t\t'end': End the current group and decreases the indentation of subsequent output events.\n\t\t\t\tA non empty 'output' attribute is shown as the unindented end of the group.\n\t\t\t*/\n\t\t\tgroup?: 'start' | 'startCollapsed' | 'end';\n\t\t\t/** If an attribute 'variablesReference' exists and its value is > 0, the output contains objects which can be retrieved by passing 'variablesReference' to the 'variables' request. The value should be less than or equal to 2147483647 (2^31-1). */\n\t\t\tvariablesReference?: number;\n\t\t\t/** An optional source location where the output was produced. */\n\t\t\tsource?: Source;\n\t\t\t/** An optional source location line where the output was produced. */\n\t\t\tline?: number;\n\t\t\t/** An optional source location column where the output was produced. */\n\t\t\tcolumn?: number;\n\t\t\t/** Optional data to report. For the 'telemetry' category the data will be sent to telemetry, for the other categories the data is shown in JSON format. */\n\t\t\tdata?: any;\n\t\t};\n\t}\n\n\t/** Event message for 'breakpoint' event type.\n\t\tThe event indicates that some information about a breakpoint has changed.\n\t*/\n\texport interface BreakpointEvent extends Event {\n\t\t// event: 'breakpoint';\n\t\tbody: {\n\t\t\t/** The reason for the event.\n\t\t\t\tValues: 'changed', 'new', 'removed', etc.\n\t\t\t*/\n\t\t\treason: 'changed' | 'new' | 'removed' | string;\n\t\t\t/** The 'id' attribute is used to find the target breakpoint and the other attributes are used as the new values. */\n\t\t\tbreakpoint: Breakpoint;\n\t\t};\n\t}\n\n\t/** Event message for 'module' event type.\n\t\tThe event indicates that some information about a module has changed.\n\t*/\n\texport interface ModuleEvent extends Event {\n\t\t// event: 'module';\n\t\tbody: {\n\t\t\t/** The reason for the event. */\n\t\t\treason: 'new' | 'changed' | 'removed';\n\t\t\t/** The new, changed, or removed module. In case of 'removed' only the module id is used. */\n\t\t\tmodule: Module;\n\t\t};\n\t}\n\n\t/** Event message for 'loadedSource' event type.\n\t\tThe event indicates that some source has been added, changed, or removed from the set of all loaded sources.\n\t*/\n\texport interface LoadedSourceEvent extends Event {\n\t\t// event: 'loadedSource';\n\t\tbody: {\n\t\t\t/** The reason for the event. */\n\t\t\treason: 'new' | 'changed' | 'removed';\n\t\t\t/** The new, changed, or removed source. */\n\t\t\tsource: Source;\n\t\t};\n\t}\n\n\t/** Event message for 'process' event type.\n\t\tThe event indicates that the debugger has begun debugging a new process. Either one that it has launched, or one that it has attached to.\n\t*/\n\texport interface ProcessEvent extends Event {\n\t\t// event: 'process';\n\t\tbody: {\n\t\t\t/** The logical name of the process. This is usually the full path to process's executable file. Example: /home/example/myproj/program.js. */\n\t\t\tname: string;\n\t\t\t/** The system process id of the debugged process. This property will be missing for non-system processes. */\n\t\t\tsystemProcessId?: number;\n\t\t\t/** If true, the process is running on the same computer as the debug adapter. */\n\t\t\tisLocalProcess?: boolean;\n\t\t\t/** Describes how the debug engine started debugging this process.\n\t\t\t\t'launch': Process was launched under the debugger.\n\t\t\t\t'attach': Debugger attached to an existing process.\n\t\t\t\t'attachForSuspendedLaunch': A project launcher component has launched a new process in a suspended state and then asked the debugger to attach.\n\t\t\t*/\n\t\t\tstartMethod?: 'launch' | 'attach' | 'attachForSuspendedLaunch';\n\t\t\t/** The size of a pointer or address for this process, in bits. This value may be used by clients when formatting addresses for display. */\n\t\t\tpointerSize?: number;\n\t\t};\n\t}\n\n\t/** Event message for 'capabilities' event type.\n\t\tThe event indicates that one or more capabilities have changed.\n\t\tSince the capabilities are dependent on the frontend and its UI, it might not be possible to change that at random times (or too late).\n\t\tConsequently this event has a hint characteristic: a frontend can only be expected to make a 'best effort' in honouring individual capabilities but there are no guarantees.\n\t\tOnly changed capabilities need to be included, all other capabilities keep their values.\n\t*/\n\texport interface CapabilitiesEvent extends Event {\n\t\t// event: 'capabilities';\n\t\tbody: {\n\t\t\t/** The set of updated capabilities. */\n\t\t\tcapabilities: Capabilities;\n\t\t};\n\t}\n\n\t/** Event message for 'progressStart' event type.\n\t\tThe event signals that a long running operation is about to start and\n\t\tprovides additional information for the client to set up a corresponding progress and cancellation UI.\n\t\tThe client is free to delay the showing of the UI in order to reduce flicker.\n\t\tThis event should only be sent if the client has passed the value true for the 'supportsProgressReporting' capability of the 'initialize' request.\n\t*/\n\texport interface ProgressStartEvent extends Event {\n\t\t// event: 'progressStart';\n\t\tbody: {\n\t\t\t/** An ID that must be used in subsequent 'progressUpdate' and 'progressEnd' events to make them refer to the same progress reporting.\n\t\t\t\tIDs must be unique within a debug session.\n\t\t\t*/\n\t\t\tprogressId: string;\n\t\t\t/** Mandatory (short) title of the progress reporting. Shown in the UI to describe the long running operation. */\n\t\t\ttitle: string;\n\t\t\t/** The request ID that this progress report is related to. If specified a debug adapter is expected to emit\n\t\t\t\tprogress events for the long running request until the request has been either completed or cancelled.\n\t\t\t\tIf the request ID is omitted, the progress report is assumed to be related to some general activity of the debug adapter.\n\t\t\t*/\n\t\t\trequestId?: number;\n\t\t\t/** If true, the request that reports progress may be canceled with a 'cancel' request.\n\t\t\t\tSo this property basically controls whether the client should use UX that supports cancellation.\n\t\t\t\tClients that don't support cancellation are allowed to ignore the setting.\n\t\t\t*/\n\t\t\tcancellable?: boolean;\n\t\t\t/** Optional, more detailed progress message. */\n\t\t\tmessage?: string;\n\t\t\t/** Optional progress percentage to display (value range: 0 to 100). If omitted no percentage will be shown. */\n\t\t\tpercentage?: number;\n\t\t};\n\t}\n\n\t/** Event message for 'progressUpdate' event type.\n\t\tThe event signals that the progress reporting needs to updated with a new message and/or percentage.\n\t\tThe client does not have to update the UI immediately, but the clients needs to keep track of the message and/or percentage values.\n\t\tThis event should only be sent if the client has passed the value true for the 'supportsProgressReporting' capability of the 'initialize' request.\n\t*/\n\texport interface ProgressUpdateEvent extends Event {\n\t\t// event: 'progressUpdate';\n\t\tbody: {\n\t\t\t/** The ID that was introduced in the initial 'progressStart' event. */\n\t\t\tprogressId: string;\n\t\t\t/** Optional, more detailed progress message. If omitted, the previous message (if any) is used. */\n\t\t\tmessage?: string;\n\t\t\t/** Optional progress percentage to display (value range: 0 to 100). If omitted no percentage will be shown. */\n\t\t\tpercentage?: number;\n\t\t};\n\t}\n\n\t/** Event message for 'progressEnd' event type.\n\t\tThe event signals the end of the progress reporting with an optional final message.\n\t\tThis event should only be sent if the client has passed the value true for the 'supportsProgressReporting' capability of the 'initialize' request.\n\t*/\n\texport interface ProgressEndEvent extends Event {\n\t\t// event: 'progressEnd';\n\t\tbody: {\n\t\t\t/** The ID that was introduced in the initial 'ProgressStartEvent'. */\n\t\t\tprogressId: string;\n\t\t\t/** Optional, more detailed progress message. If omitted, the previous message (if any) is used. */\n\t\t\tmessage?: string;\n\t\t};\n\t}\n\n\t/** Event message for 'invalidated' event type.\n\t\tThis event signals that some state in the debug adapter has changed and requires that the client needs to re-render the data snapshot previously requested.\n\t\tDebug adapters do not have to emit this event for runtime changes like stopped or thread events because in that case the client refetches the new state anyway. But the event can be used for example to refresh the UI after rendering formatting has changed in the debug adapter.\n\t\tThis event should only be sent if the debug adapter has received a value true for the 'supportsInvalidatedEvent' capability of the 'initialize' request.\n\t*/\n\texport interface InvalidatedEvent extends Event {\n\t\t// event: 'invalidated';\n\t\tbody: {\n\t\t\t/** Optional set of logical areas that got invalidated. This property has a hint characteristic: a client can only be expected to make a 'best effort' in honouring the areas but there are no guarantees. If this property is missing, empty, or if values are not understand the client should assume a single value 'all'. */\n\t\t\tareas?: InvalidatedAreas[];\n\t\t\t/** If specified, the client only needs to refetch data related to this thread. */\n\t\t\tthreadId?: number;\n\t\t\t/** If specified, the client only needs to refetch data related to this stack frame (and the 'threadId' is ignored). */\n\t\t\tstackFrameId?: number;\n\t\t};\n\t}\n\n\t/** Event message for 'memory' event type.\n\t\tThis event indicates that some memory range has been updated. It should only be sent if the debug adapter has received a value true for the `supportsMemoryEvent` capability of the `initialize` request.\n\t\tClients typically react to the event by re-issuing a `readMemory` request if they show the memory identified by the `memoryReference` and if the updated memory range overlaps the displayed range. Clients should not make assumptions how individual memory references relate to each other, so they should not assume that they are part of a single continuous address range and might overlap.\n\t\tDebug adapters can use this event to indicate that the contents of a memory range has changed due to some other DAP request like `setVariable` or `setExpression`. Debug adapters are not expected to emit this event for each and every memory change of a running program, because that information is typically not available from debuggers and it would flood clients with too many events.\n\t*/\n\texport interface MemoryEvent extends Event {\n\t\t// event: 'memory';\n\t\tbody: {\n\t\t\t/** Memory reference of a memory range that has been updated. */\n\t\t\tmemoryReference: string;\n\t\t\t/** Starting offset in bytes where memory has been updated. Can be negative. */\n\t\t\toffset: number;\n\t\t\t/** Number of bytes updated. */\n\t\t\tcount: number;\n\t\t};\n\t}\n\n\t/** RunInTerminal request; value of command field is 'runInTerminal'.\n\t\tThis optional request is sent from the debug adapter to the client to run a command in a terminal.\n\t\tThis is typically used to launch the debuggee in a terminal provided by the client.\n\t\tThis request should only be called if the client has passed the value true for the 'supportsRunInTerminalRequest' capability of the 'initialize' request.\n\t*/\n\texport interface RunInTerminalRequest extends Request {\n\t\t// command: 'runInTerminal';\n\t\targuments: RunInTerminalRequestArguments;\n\t}\n\n\t/** Arguments for 'runInTerminal' request. */\n\texport interface RunInTerminalRequestArguments {\n\t\t/** What kind of terminal to launch. */\n\t\tkind?: 'integrated' | 'external';\n\t\t/** Optional title of the terminal. */\n\t\ttitle?: string;\n\t\t/** Working directory for the command. For non-empty, valid paths this typically results in execution of a change directory command. */\n\t\tcwd: string;\n\t\t/** List of arguments. The first argument is the command to run. */\n\t\targs: string[];\n\t\t/** Environment key-value pairs that are added to or removed from the default environment. */\n\t\tenv?: { [key: string]: string | null; };\n\t}\n\n\t/** Response to 'runInTerminal' request. */\n\texport interface RunInTerminalResponse extends Response {\n\t\tbody: {\n\t\t\t/** The process ID. The value should be less than or equal to 2147483647 (2^31-1). */\n\t\t\tprocessId?: number;\n\t\t\t/** The process ID of the terminal shell. The value should be less than or equal to 2147483647 (2^31-1). */\n\t\t\tshellProcessId?: number;\n\t\t};\n\t}\n\n\t/** Initialize request; value of command field is 'initialize'.\n\t\tThe 'initialize' request is sent as the first request from the client to the debug adapter\n\t\tin order to configure it with client capabilities and to retrieve capabilities from the debug adapter.\n\t\tUntil the debug adapter has responded to with an 'initialize' response, the client must not send any additional requests or events to the debug adapter.\n\t\tIn addition the debug adapter is not allowed to send any requests or events to the client until it has responded with an 'initialize' response.\n\t\tThe 'initialize' request may only be sent once.\n\t*/\n\texport interface InitializeRequest extends Request {\n\t\t// command: 'initialize';\n\t\targuments: InitializeRequestArguments;\n\t}\n\n\t/** Arguments for 'initialize' request. */\n\texport interface InitializeRequestArguments {\n\t\t/** The ID of the (frontend) client using this adapter. */\n\t\tclientID?: string;\n\t\t/** The human readable name of the (frontend) client using this adapter. */\n\t\tclientName?: string;\n\t\t/** The ID of the debug adapter. */\n\t\tadapterID: string;\n\t\t/** The ISO-639 locale of the (frontend) client using this adapter, e.g. en-US or de-CH. */\n\t\tlocale?: string;\n\t\t/** If true all line numbers are 1-based (default). */\n\t\tlinesStartAt1?: boolean;\n\t\t/** If true all column numbers are 1-based (default). */\n\t\tcolumnsStartAt1?: boolean;\n\t\t/** Determines in what format paths are specified. The default is 'path', which is the native format.\n\t\t\tValues: 'path', 'uri', etc.\n\t\t*/\n\t\tpathFormat?: 'path' | 'uri' | string;\n\t\t/** Client supports the optional type attribute for variables. */\n\t\tsupportsVariableType?: boolean;\n\t\t/** Client supports the paging of variables. */\n\t\tsupportsVariablePaging?: boolean;\n\t\t/** Client supports the runInTerminal request. */\n\t\tsupportsRunInTerminalRequest?: boolean;\n\t\t/** Client supports memory references. */\n\t\tsupportsMemoryReferences?: boolean;\n\t\t/** Client supports progress reporting. */\n\t\tsupportsProgressReporting?: boolean;\n\t\t/** Client supports the invalidated event. */\n\t\tsupportsInvalidatedEvent?: boolean;\n\t\t/** Client supports the memory event. */\n\t\tsupportsMemoryEvent?: boolean;\n\t}\n\n\t/** Response to 'initialize' request. */\n\texport interface InitializeResponse extends Response {\n\t\t/** The capabilities of this debug adapter. */\n\t\tbody?: Capabilities;\n\t}\n\n\t/** ConfigurationDone request; value of command field is 'configurationDone'.\n\t\tThis optional request indicates that the client has finished initialization of the debug adapter.\n\t\tSo it is the last request in the sequence of configuration requests (which was started by the 'initialized' event).\n\t\tClients should only call this request if the capability 'supportsConfigurationDoneRequest' is true.\n\t*/\n\texport interface ConfigurationDoneRequest extends Request {\n\t\t// command: 'configurationDone';\n\t\targuments?: ConfigurationDoneArguments;\n\t}\n\n\t/** Arguments for 'configurationDone' request. */\n\texport interface ConfigurationDoneArguments {\n\t}\n\n\t/** Response to 'configurationDone' request. This is just an acknowledgement, so no body field is required. */\n\texport interface ConfigurationDoneResponse extends Response {\n\t}\n\n\t/** Launch request; value of command field is 'launch'.\n\t\tThis launch request is sent from the client to the debug adapter to start the debuggee with or without debugging (if 'noDebug' is true).\n\t\tSince launching is debugger/runtime specific, the arguments for this request are not part of this specification.\n\t*/\n\texport interface LaunchRequest extends Request {\n\t\t// command: 'launch';\n\t\targuments: LaunchRequestArguments;\n\t}\n\n\t/** Arguments for 'launch' request. Additional attributes are implementation specific. */\n\texport interface LaunchRequestArguments {\n\t\t/** If noDebug is true the launch request should launch the program without enabling debugging. */\n\t\tnoDebug?: boolean;\n\t\t/** Optional data from the previous, restarted session.\n\t\t\tThe data is sent as the 'restart' attribute of the 'terminated' event.\n\t\t\tThe client should leave the data intact.\n\t\t*/\n\t\t__restart?: any;\n\t}\n\n\t/** Response to 'launch' request. This is just an acknowledgement, so no body field is required. */\n\texport interface LaunchResponse extends Response {\n\t}\n\n\t/** Attach request; value of command field is 'attach'.\n\t\tThe attach request is sent from the client to the debug adapter to attach to a debuggee that is already running.\n\t\tSince attaching is debugger/runtime specific, the arguments for this request are not part of this specification.\n\t*/\n\texport interface AttachRequest extends Request {\n\t\t// command: 'attach';\n\t\targuments: AttachRequestArguments;\n\t}\n\n\t/** Arguments for 'attach' request. Additional attributes are implementation specific. */\n\texport interface AttachRequestArguments {\n\t\t/** Optional data from the previous, restarted session.\n\t\t\tThe data is sent as the 'restart' attribute of the 'terminated' event.\n\t\t\tThe client should leave the data intact.\n\t\t*/\n\t\t__restart?: any;\n\t}\n\n\t/** Response to 'attach' request. This is just an acknowledgement, so no body field is required. */\n\texport interface AttachResponse extends Response {\n\t}\n\n\t/** Restart request; value of command field is 'restart'.\n\t\tRestarts a debug session. Clients should only call this request if the capability 'supportsRestartRequest' is true.\n\t\tIf the capability is missing or has the value false, a typical client will emulate 'restart' by terminating the debug adapter first and then launching it anew.\n\t*/\n\texport interface RestartRequest extends Request {\n\t\t// command: 'restart';\n\t\targuments?: RestartArguments;\n\t}\n\n\t/** Arguments for 'restart' request. */\n\texport interface RestartArguments {\n\t\t/** The latest version of the 'launch' or 'attach' configuration. */\n\t\targuments?: LaunchRequestArguments | AttachRequestArguments;\n\t}\n\n\t/** Response to 'restart' request. This is just an acknowledgement, so no body field is required. */\n\texport interface RestartResponse extends Response {\n\t}\n\n\t/** Disconnect request; value of command field is 'disconnect'.\n\t\tThe 'disconnect' request is sent from the client to the debug adapter in order to stop debugging.\n\t\tIt asks the debug adapter to disconnect from the debuggee and to terminate the debug adapter.\n\t\tIf the debuggee has been started with the 'launch' request, the 'disconnect' request terminates the debuggee.\n\t\tIf the 'attach' request was used to connect to the debuggee, 'disconnect' does not terminate the debuggee.\n\t\tThis behavior can be controlled with the 'terminateDebuggee' argument (if supported by the debug adapter).\n\t*/\n\texport interface DisconnectRequest extends Request {\n\t\t// command: 'disconnect';\n\t\targuments?: DisconnectArguments;\n\t}\n\n\t/** Arguments for 'disconnect' request. */\n\texport interface DisconnectArguments {\n\t\t/** A value of true indicates that this 'disconnect' request is part of a restart sequence. */\n\t\trestart?: boolean;\n\t\t/** Indicates whether the debuggee should be terminated when the debugger is disconnected.\n\t\t\tIf unspecified, the debug adapter is free to do whatever it thinks is best.\n\t\t\tThe attribute is only honored by a debug adapter if the capability 'supportTerminateDebuggee' is true.\n\t\t*/\n\t\tterminateDebuggee?: boolean;\n\t\t/** Indicates whether the debuggee should stay suspended when the debugger is disconnected.\n\t\t\tIf unspecified, the debuggee should resume execution.\n\t\t\tThe attribute is only honored by a debug adapter if the capability 'supportSuspendDebuggee' is true.\n\t\t*/\n\t\tsuspendDebuggee?: boolean;\n\t}\n\n\t/** Response to 'disconnect' request. This is just an acknowledgement, so no body field is required. */\n\texport interface DisconnectResponse extends Response {\n\t}\n\n\t/** Terminate request; value of command field is 'terminate'.\n\t\tThe 'terminate' request is sent from the client to the debug adapter in order to give the debuggee a chance for terminating itself.\n\t\tClients should only call this request if the capability 'supportsTerminateRequest' is true.\n\t*/\n\texport interface TerminateRequest extends Request {\n\t\t// command: 'terminate';\n\t\targuments?: TerminateArguments;\n\t}\n\n\t/** Arguments for 'terminate' request. */\n\texport interface TerminateArguments {\n\t\t/** A value of true indicates that this 'terminate' request is part of a restart sequence. */\n\t\trestart?: boolean;\n\t}\n\n\t/** Response to 'terminate' request. This is just an acknowledgement, so no body field is required. */\n\texport interface TerminateResponse extends Response {\n\t}\n\n\t/** BreakpointLocations request; value of command field is 'breakpointLocations'.\n\t\tThe 'breakpointLocations' request returns all possible locations for source breakpoints in a given range.\n\t\tClients should only call this request if the capability 'supportsBreakpointLocationsRequest' is true.\n\t*/\n\texport interface BreakpointLocationsRequest extends Request {\n\t\t// command: 'breakpointLocations';\n\t\targuments?: BreakpointLocationsArguments;\n\t}\n\n\t/** Arguments for 'breakpointLocations' request. */\n\texport interface BreakpointLocationsArguments {\n\t\t/** The source location of the breakpoints; either 'source.path' or 'source.reference' must be specified. */\n\t\tsource: Source;\n\t\t/** Start line of range to search possible breakpoint locations in. If only the line is specified, the request returns all possible locations in that line. */\n\t\tline: number;\n\t\t/** Optional start column of range to search possible breakpoint locations in. If no start column is given, the first column in the start line is assumed. */\n\t\tcolumn?: number;\n\t\t/** Optional end line of range to search possible breakpoint locations in. If no end line is given, then the end line is assumed to be the start line. */\n\t\tendLine?: number;\n\t\t/** Optional end column of range to search possible breakpoint locations in. If no end column is given, then it is assumed to be in the last column of the end line. */\n\t\tendColumn?: number;\n\t}\n\n\t/** Response to 'breakpointLocations' request.\n\t\tContains possible locations for source breakpoints.\n\t*/\n\texport interface BreakpointLocationsResponse extends Response {\n\t\tbody: {\n\t\t\t/** Sorted set of possible breakpoint locations. */\n\t\t\tbreakpoints: BreakpointLocation[];\n\t\t};\n\t}\n\n\t/** SetBreakpoints request; value of command field is 'setBreakpoints'.\n\t\tSets multiple breakpoints for a single source and clears all previous breakpoints in that source.\n\t\tTo clear all breakpoint for a source, specify an empty array.\n\t\tWhen a breakpoint is hit, a 'stopped' event (with reason 'breakpoint') is generated.\n\t*/\n\texport interface SetBreakpointsRequest extends Request {\n\t\t// command: 'setBreakpoints';\n\t\targuments: SetBreakpointsArguments;\n\t}\n\n\t/** Arguments for 'setBreakpoints' request. */\n\texport interface SetBreakpointsArguments {\n\t\t/** The source location of the breakpoints; either 'source.path' or 'source.reference' must be specified. */\n\t\tsource: Source;\n\t\t/** The code locations of the breakpoints. */\n\t\tbreakpoints?: SourceBreakpoint[];\n\t\t/** Deprecated: The code locations of the breakpoints. */\n\t\tlines?: number[];\n\t\t/** A value of true indicates that the underlying source has been modified which results in new breakpoint locations. */\n\t\tsourceModified?: boolean;\n\t}\n\n\t/** Response to 'setBreakpoints' request.\n\t\tReturned is information about each breakpoint created by this request.\n\t\tThis includes the actual code location and whether the breakpoint could be verified.\n\t\tThe breakpoints returned are in the same order as the elements of the 'breakpoints'\n\t\t(or the deprecated 'lines') array in the arguments.\n\t*/\n\texport interface SetBreakpointsResponse extends Response {\n\t\tbody: {\n\t\t\t/** Information about the breakpoints.\n\t\t\t\tThe array elements are in the same order as the elements of the 'breakpoints' (or the deprecated 'lines') array in the arguments.\n\t\t\t*/\n\t\t\tbreakpoints: Breakpoint[];\n\t\t};\n\t}\n\n\t/** SetFunctionBreakpoints request; value of command field is 'setFunctionBreakpoints'.\n\t\tReplaces all existing function breakpoints with new function breakpoints.\n\t\tTo clear all function breakpoints, specify an empty array.\n\t\tWhen a function breakpoint is hit, a 'stopped' event (with reason 'function breakpoint') is generated.\n\t\tClients should only call this request if the capability 'supportsFunctionBreakpoints' is true.\n\t*/\n\texport interface SetFunctionBreakpointsRequest extends Request {\n\t\t// command: 'setFunctionBreakpoints';\n\t\targuments: SetFunctionBreakpointsArguments;\n\t}\n\n\t/** Arguments for 'setFunctionBreakpoints' request. */\n\texport interface SetFunctionBreakpointsArguments {\n\t\t/** The function names of the breakpoints. */\n\t\tbreakpoints: FunctionBreakpoint[];\n\t}\n\n\t/** Response to 'setFunctionBreakpoints' request.\n\t\tReturned is information about each breakpoint created by this request.\n\t*/\n\texport interface SetFunctionBreakpointsResponse extends Response {\n\t\tbody: {\n\t\t\t/** Information about the breakpoints. The array elements correspond to the elements of the 'breakpoints' array. */\n\t\t\tbreakpoints: Breakpoint[];\n\t\t};\n\t}\n\n\t/** SetExceptionBreakpoints request; value of command field is 'setExceptionBreakpoints'.\n\t\tThe request configures the debuggers response to thrown exceptions.\n\t\tIf an exception is configured to break, a 'stopped' event is fired (with reason 'exception').\n\t\tClients should only call this request if the capability 'exceptionBreakpointFilters' returns one or more filters.\n\t*/\n\texport interface SetExceptionBreakpointsRequest extends Request {\n\t\t// command: 'setExceptionBreakpoints';\n\t\targuments: SetExceptionBreakpointsArguments;\n\t}\n\n\t/** Arguments for 'setExceptionBreakpoints' request. */\n\texport interface SetExceptionBreakpointsArguments {\n\t\t/** Set of exception filters specified by their ID. The set of all possible exception filters is defined by the 'exceptionBreakpointFilters' capability. The 'filter' and 'filterOptions' sets are additive. */\n\t\tfilters: string[];\n\t\t/** Set of exception filters and their options. The set of all possible exception filters is defined by the 'exceptionBreakpointFilters' capability. This attribute is only honored by a debug adapter if the capability 'supportsExceptionFilterOptions' is true. The 'filter' and 'filterOptions' sets are additive. */\n\t\tfilterOptions?: ExceptionFilterOptions[];\n\t\t/** Configuration options for selected exceptions.\n\t\t\tThe attribute is only honored by a debug adapter if the capability 'supportsExceptionOptions' is true.\n\t\t*/\n\t\texceptionOptions?: ExceptionOptions[];\n\t}\n\n\t/** Response to 'setExceptionBreakpoints' request.\n\t\tThe response contains an array of Breakpoint objects with information about each exception breakpoint or filter. The Breakpoint objects are in the same order as the elements of the 'filters', 'filterOptions', 'exceptionOptions' arrays given as arguments. If both 'filters' and 'filterOptions' are given, the returned array must start with 'filters' information first, followed by 'filterOptions' information.\n\t\tThe mandatory 'verified' property of a Breakpoint object signals whether the exception breakpoint or filter could be successfully created and whether the optional condition or hit count expressions are valid. In case of an error the 'message' property explains the problem. An optional 'id' property can be used to introduce a unique ID for the exception breakpoint or filter so that it can be updated subsequently by sending breakpoint events.\n\t\tFor backward compatibility both the 'breakpoints' array and the enclosing 'body' are optional. If these elements are missing a client will not be able to show problems for individual exception breakpoints or filters.\n\t*/\n\texport interface SetExceptionBreakpointsResponse extends Response {\n\t\tbody?: {\n\t\t\t/** Information about the exception breakpoints or filters.\n\t\t\t\tThe breakpoints returned are in the same order as the elements of the 'filters', 'filterOptions', 'exceptionOptions' arrays in the arguments. If both 'filters' and 'filterOptions' are given, the returned array must start with 'filters' information first, followed by 'filterOptions' information.\n\t\t\t*/\n\t\t\tbreakpoints?: Breakpoint[];\n\t\t};\n\t}\n\n\t/** DataBreakpointInfo request; value of command field is 'dataBreakpointInfo'.\n\t\tObtains information on a possible data breakpoint that could be set on an expression or variable.\n\t\tClients should only call this request if the capability 'supportsDataBreakpoints' is true.\n\t*/\n\texport interface DataBreakpointInfoRequest extends Request {\n\t\t// command: 'dataBreakpointInfo';\n\t\targuments: DataBreakpointInfoArguments;\n\t}\n\n\t/** Arguments for 'dataBreakpointInfo' request. */\n\texport interface DataBreakpointInfoArguments {\n\t\t/** Reference to the Variable container if the data breakpoint is requested for a child of the container. */\n\t\tvariablesReference?: number;\n\t\t/** The name of the Variable's child to obtain data breakpoint information for.\n\t\t\tIf variablesReference isn’t provided, this can be an expression.\n\t\t*/\n\t\tname: string;\n\t}\n\n\t/** Response to 'dataBreakpointInfo' request. */\n\texport interface DataBreakpointInfoResponse extends Response {\n\t\tbody: {\n\t\t\t/** An identifier for the data on which a data breakpoint can be registered with the setDataBreakpoints request or null if no data breakpoint is available. */\n\t\t\tdataId: string | null;\n\t\t\t/** UI string that describes on what data the breakpoint is set on or why a data breakpoint is not available. */\n\t\t\tdescription: string;\n\t\t\t/** Optional attribute listing the available access types for a potential data breakpoint. A UI frontend could surface this information. */\n\t\t\taccessTypes?: DataBreakpointAccessType[];\n\t\t\t/** Optional attribute indicating that a potential data breakpoint could be persisted across sessions. */\n\t\t\tcanPersist?: boolean;\n\t\t};\n\t}\n\n\t/** SetDataBreakpoints request; value of command field is 'setDataBreakpoints'.\n\t\tReplaces all existing data breakpoints with new data breakpoints.\n\t\tTo clear all data breakpoints, specify an empty array.\n\t\tWhen a data breakpoint is hit, a 'stopped' event (with reason 'data breakpoint') is generated.\n\t\tClients should only call this request if the capability 'supportsDataBreakpoints' is true.\n\t*/\n\texport interface SetDataBreakpointsRequest extends Request {\n\t\t// command: 'setDataBreakpoints';\n\t\targuments: SetDataBreakpointsArguments;\n\t}\n\n\t/** Arguments for 'setDataBreakpoints' request. */\n\texport interface SetDataBreakpointsArguments {\n\t\t/** The contents of this array replaces all existing data breakpoints. An empty array clears all data breakpoints. */\n\t\tbreakpoints: DataBreakpoint[];\n\t}\n\n\t/** Response to 'setDataBreakpoints' request.\n\t\tReturned is information about each breakpoint created by this request.\n\t*/\n\texport interface SetDataBreakpointsResponse extends Response {\n\t\tbody: {\n\t\t\t/** Information about the data breakpoints. The array elements correspond to the elements of the input argument 'breakpoints' array. */\n\t\t\tbreakpoints: Breakpoint[];\n\t\t};\n\t}\n\n\t/** SetInstructionBreakpoints request; value of command field is 'setInstructionBreakpoints'.\n\t\tReplaces all existing instruction breakpoints. Typically, instruction breakpoints would be set from a diassembly window. \n\t\tTo clear all instruction breakpoints, specify an empty array.\n\t\tWhen an instruction breakpoint is hit, a 'stopped' event (with reason 'instruction breakpoint') is generated.\n\t\tClients should only call this request if the capability 'supportsInstructionBreakpoints' is true.\n\t*/\n\texport interface SetInstructionBreakpointsRequest extends Request {\n\t\t// command: 'setInstructionBreakpoints';\n\t\targuments: SetInstructionBreakpointsArguments;\n\t}\n\n\t/** Arguments for 'setInstructionBreakpoints' request */\n\texport interface SetInstructionBreakpointsArguments {\n\t\t/** The instruction references of the breakpoints */\n\t\tbreakpoints: InstructionBreakpoint[];\n\t}\n\n\t/** Response to 'setInstructionBreakpoints' request */\n\texport interface SetInstructionBreakpointsResponse extends Response {\n\t\tbody: {\n\t\t\t/** Information about the breakpoints. The array elements correspond to the elements of the 'breakpoints' array. */\n\t\t\tbreakpoints: Breakpoint[];\n\t\t};\n\t}\n\n\t/** Continue request; value of command field is 'continue'.\n\t\tThe request starts the debuggee to run again.\n\t*/\n\texport interface ContinueRequest extends Request {\n\t\t// command: 'continue';\n\t\targuments: ContinueArguments;\n\t}\n\n\t/** Arguments for 'continue' request. */\n\texport interface ContinueArguments {\n\t\t/** Continue execution for the specified thread (if possible).\n\t\t\tIf the backend cannot continue on a single thread but will continue on all threads, it should set the 'allThreadsContinued' attribute in the response to true.\n\t\t*/\n\t\tthreadId: number;\n\t}\n\n\t/** Response to 'continue' request. */\n\texport interface ContinueResponse extends Response {\n\t\tbody: {\n\t\t\t/** If true, the 'continue' request has ignored the specified thread and continued all threads instead.\n\t\t\t\tIf this attribute is missing a value of 'true' is assumed for backward compatibility.\n\t\t\t*/\n\t\t\tallThreadsContinued?: boolean;\n\t\t};\n\t}\n\n\t/** Next request; value of command field is 'next'.\n\t\tThe request starts the debuggee to run again for one step.\n\t\tThe debug adapter first sends the response and then a 'stopped' event (with reason 'step') after the step has completed.\n\t*/\n\texport interface NextRequest extends Request {\n\t\t// command: 'next';\n\t\targuments: NextArguments;\n\t}\n\n\t/** Arguments for 'next' request. */\n\texport interface NextArguments {\n\t\t/** Execute 'next' for this thread. */\n\t\tthreadId: number;\n\t\t/** Optional granularity to step. If no granularity is specified, a granularity of 'statement' is assumed. */\n\t\tgranularity?: SteppingGranularity;\n\t}\n\n\t/** Response to 'next' request. This is just an acknowledgement, so no body field is required. */\n\texport interface NextResponse extends Response {\n\t}\n\n\t/** StepIn request; value of command field is 'stepIn'.\n\t\tThe request starts the debuggee to step into a function/method if possible.\n\t\tIf it cannot step into a target, 'stepIn' behaves like 'next'.\n\t\tThe debug adapter first sends the response and then a 'stopped' event (with reason 'step') after the step has completed.\n\t\tIf there are multiple function/method calls (or other targets) on the source line,\n\t\tthe optional argument 'targetId' can be used to control into which target the 'stepIn' should occur.\n\t\tThe list of possible targets for a given source line can be retrieved via the 'stepInTargets' request.\n\t*/\n\texport interface StepInRequest extends Request {\n\t\t// command: 'stepIn';\n\t\targuments: StepInArguments;\n\t}\n\n\t/** Arguments for 'stepIn' request. */\n\texport interface StepInArguments {\n\t\t/** Execute 'stepIn' for this thread. */\n\t\tthreadId: number;\n\t\t/** Optional id of the target to step into. */\n\t\ttargetId?: number;\n\t\t/** Optional granularity to step. If no granularity is specified, a granularity of 'statement' is assumed. */\n\t\tgranularity?: SteppingGranularity;\n\t}\n\n\t/** Response to 'stepIn' request. This is just an acknowledgement, so no body field is required. */\n\texport interface StepInResponse extends Response {\n\t}\n\n\t/** StepOut request; value of command field is 'stepOut'.\n\t\tThe request starts the debuggee to run again for one step.\n\t\tThe debug adapter first sends the response and then a 'stopped' event (with reason 'step') after the step has completed.\n\t*/\n\texport interface StepOutRequest extends Request {\n\t\t// command: 'stepOut';\n\t\targuments: StepOutArguments;\n\t}\n\n\t/** Arguments for 'stepOut' request. */\n\texport interface StepOutArguments {\n\t\t/** Execute 'stepOut' for this thread. */\n\t\tthreadId: number;\n\t\t/** Optional granularity to step. If no granularity is specified, a granularity of 'statement' is assumed. */\n\t\tgranularity?: SteppingGranularity;\n\t}\n\n\t/** Response to 'stepOut' request. This is just an acknowledgement, so no body field is required. */\n\texport interface StepOutResponse extends Response {\n\t}\n\n\t/** StepBack request; value of command field is 'stepBack'.\n\t\tThe request starts the debuggee to run one step backwards.\n\t\tThe debug adapter first sends the response and then a 'stopped' event (with reason 'step') after the step has completed.\n\t\tClients should only call this request if the capability 'supportsStepBack' is true.\n\t*/\n\texport interface StepBackRequest extends Request {\n\t\t// command: 'stepBack';\n\t\targuments: StepBackArguments;\n\t}\n\n\t/** Arguments for 'stepBack' request. */\n\texport interface StepBackArguments {\n\t\t/** Execute 'stepBack' for this thread. */\n\t\tthreadId: number;\n\t\t/** Optional granularity to step. If no granularity is specified, a granularity of 'statement' is assumed. */\n\t\tgranularity?: SteppingGranularity;\n\t}\n\n\t/** Response to 'stepBack' request. This is just an acknowledgement, so no body field is required. */\n\texport interface StepBackResponse extends Response {\n\t}\n\n\t/** ReverseContinue request; value of command field is 'reverseContinue'.\n\t\tThe request starts the debuggee to run backward.\n\t\tClients should only call this request if the capability 'supportsStepBack' is true.\n\t*/\n\texport interface ReverseContinueRequest extends Request {\n\t\t// command: 'reverseContinue';\n\t\targuments: ReverseContinueArguments;\n\t}\n\n\t/** Arguments for 'reverseContinue' request. */\n\texport interface ReverseContinueArguments {\n\t\t/** Execute 'reverseContinue' for this thread. */\n\t\tthreadId: number;\n\t}\n\n\t/** Response to 'reverseContinue' request. This is just an acknowledgement, so no body field is required. */\n\texport interface ReverseContinueResponse extends Response {\n\t}\n\n\t/** RestartFrame request; value of command field is 'restartFrame'.\n\t\tThe request restarts execution of the specified stackframe.\n\t\tThe debug adapter first sends the response and then a 'stopped' event (with reason 'restart') after the restart has completed.\n\t\tClients should only call this request if the capability 'supportsRestartFrame' is true.\n\t*/\n\texport interface RestartFrameRequest extends Request {\n\t\t// command: 'restartFrame';\n\t\targuments: RestartFrameArguments;\n\t}\n\n\t/** Arguments for 'restartFrame' request. */\n\texport interface RestartFrameArguments {\n\t\t/** Restart this stackframe. */\n\t\tframeId: number;\n\t}\n\n\t/** Response to 'restartFrame' request. This is just an acknowledgement, so no body field is required. */\n\texport interface RestartFrameResponse extends Response {\n\t}\n\n\t/** Goto request; value of command field is 'goto'.\n\t\tThe request sets the location where the debuggee will continue to run.\n\t\tThis makes it possible to skip the execution of code or to executed code again.\n\t\tThe code between the current location and the goto target is not executed but skipped.\n\t\tThe debug adapter first sends the response and then a 'stopped' event with reason 'goto'.\n\t\tClients should only call this request if the capability 'supportsGotoTargetsRequest' is true (because only then goto targets exist that can be passed as arguments).\n\t*/\n\texport interface GotoRequest extends Request {\n\t\t// command: 'goto';\n\t\targuments: GotoArguments;\n\t}\n\n\t/** Arguments for 'goto' request. */\n\texport interface GotoArguments {\n\t\t/** Set the goto target for this thread. */\n\t\tthreadId: number;\n\t\t/** The location where the debuggee will continue to run. */\n\t\ttargetId: number;\n\t}\n\n\t/** Response to 'goto' request. This is just an acknowledgement, so no body field is required. */\n\texport interface GotoResponse extends Response {\n\t}\n\n\t/** Pause request; value of command field is 'pause'.\n\t\tThe request suspends the debuggee.\n\t\tThe debug adapter first sends the response and then a 'stopped' event (with reason 'pause') after the thread has been paused successfully.\n\t*/\n\texport interface PauseRequest extends Request {\n\t\t// command: 'pause';\n\t\targuments: PauseArguments;\n\t}\n\n\t/** Arguments for 'pause' request. */\n\texport interface PauseArguments {\n\t\t/** Pause execution for this thread. */\n\t\tthreadId: number;\n\t}\n\n\t/** Response to 'pause' request. This is just an acknowledgement, so no body field is required. */\n\texport interface PauseResponse extends Response {\n\t}\n\n\t/** StackTrace request; value of command field is 'stackTrace'.\n\t\tThe request returns a stacktrace from the current execution state of a given thread.\n\t\tA client can request all stack frames by omitting the startFrame and levels arguments. For performance conscious clients and if the debug adapter's 'supportsDelayedStackTraceLoading' capability is true, stack frames can be retrieved in a piecemeal way with the startFrame and levels arguments. The response of the stackTrace request may contain a totalFrames property that hints at the total number of frames in the stack. If a client needs this total number upfront, it can issue a request for a single (first) frame and depending on the value of totalFrames decide how to proceed. In any case a client should be prepared to receive less frames than requested, which is an indication that the end of the stack has been reached.\n\t*/\n\texport interface StackTraceRequest extends Request {\n\t\t// command: 'stackTrace';\n\t\targuments: StackTraceArguments;\n\t}\n\n\t/** Arguments for 'stackTrace' request. */\n\texport interface StackTraceArguments {\n\t\t/** Retrieve the stacktrace for this thread. */\n\t\tthreadId: number;\n\t\t/** The index of the first frame to return; if omitted frames start at 0. */\n\t\tstartFrame?: number;\n\t\t/** The maximum number of frames to return. If levels is not specified or 0, all frames are returned. */\n\t\tlevels?: number;\n\t\t/** Specifies details on how to format the stack frames.\n\t\t\tThe attribute is only honored by a debug adapter if the capability 'supportsValueFormattingOptions' is true.\n\t\t*/\n\t\tformat?: StackFrameFormat;\n\t}\n\n\t/** Response to 'stackTrace' request. */\n\texport interface StackTraceResponse extends Response {\n\t\tbody: {\n\t\t\t/** The frames of the stackframe. If the array has length zero, there are no stackframes available.\n\t\t\t\tThis means that there is no location information available.\n\t\t\t*/\n\t\t\tstackFrames: StackFrame[];\n\t\t\t/** The total number of frames available in the stack. If omitted or if totalFrames is larger than the available frames, a client is expected to request frames until a request returns less frames than requested (which indicates the end of the stack). Returning monotonically increasing totalFrames values for subsequent requests can be used to enforce paging in the client. */\n\t\t\ttotalFrames?: number;\n\t\t};\n\t}\n\n\t/** Scopes request; value of command field is 'scopes'.\n\t\tThe request returns the variable scopes for a given stackframe ID.\n\t*/\n\texport interface ScopesRequest extends Request {\n\t\t// command: 'scopes';\n\t\targuments: ScopesArguments;\n\t}\n\n\t/** Arguments for 'scopes' request. */\n\texport interface ScopesArguments {\n\t\t/** Retrieve the scopes for this stackframe. */\n\t\tframeId: number;\n\t}\n\n\t/** Response to 'scopes' request. */\n\texport interface ScopesResponse extends Response {\n\t\tbody: {\n\t\t\t/** The scopes of the stackframe. If the array has length zero, there are no scopes available. */\n\t\t\tscopes: Scope[];\n\t\t};\n\t}\n\n\t/** Variables request; value of command field is 'variables'.\n\t\tRetrieves all child variables for the given variable reference.\n\t\tAn optional filter can be used to limit the fetched children to either named or indexed children.\n\t*/\n\texport interface VariablesRequest extends Request {\n\t\t// command: 'variables';\n\t\targuments: VariablesArguments;\n\t}\n\n\t/** Arguments for 'variables' request. */\n\texport interface VariablesArguments {\n\t\t/** The Variable reference. */\n\t\tvariablesReference: number;\n\t\t/** Optional filter to limit the child variables to either named or indexed. If omitted, both types are fetched. */\n\t\tfilter?: 'indexed' | 'named';\n\t\t/** The index of the first variable to return; if omitted children start at 0. */\n\t\tstart?: number;\n\t\t/** The number of variables to return. If count is missing or 0, all variables are returned. */\n\t\tcount?: number;\n\t\t/** Specifies details on how to format the Variable values.\n\t\t\tThe attribute is only honored by a debug adapter if the capability 'supportsValueFormattingOptions' is true.\n\t\t*/\n\t\tformat?: ValueFormat;\n\t}\n\n\t/** Response to 'variables' request. */\n\texport interface VariablesResponse extends Response {\n\t\tbody: {\n\t\t\t/** All (or a range) of variables for the given variable reference. */\n\t\t\tvariables: Variable[];\n\t\t};\n\t}\n\n\t/** SetVariable request; value of command field is 'setVariable'.\n\t\tSet the variable with the given name in the variable container to a new value. Clients should only call this request if the capability 'supportsSetVariable' is true.\n\t\tIf a debug adapter implements both setVariable and setExpression, a client will only use setExpression if the variable has an evaluateName property.\n\t*/\n\texport interface SetVariableRequest extends Request {\n\t\t// command: 'setVariable';\n\t\targuments: SetVariableArguments;\n\t}\n\n\t/** Arguments for 'setVariable' request. */\n\texport interface SetVariableArguments {\n\t\t/** The reference of the variable container. */\n\t\tvariablesReference: number;\n\t\t/** The name of the variable in the container. */\n\t\tname: string;\n\t\t/** The value of the variable. */\n\t\tvalue: string;\n\t\t/** Specifies details on how to format the response value. */\n\t\tformat?: ValueFormat;\n\t}\n\n\t/** Response to 'setVariable' request. */\n\texport interface SetVariableResponse extends Response {\n\t\tbody: {\n\t\t\t/** The new value of the variable. */\n\t\t\tvalue: string;\n\t\t\t/** The type of the new value. Typically shown in the UI when hovering over the value. */\n\t\t\ttype?: string;\n\t\t\t/** If variablesReference is > 0, the new value is structured and its children can be retrieved by passing variablesReference to the VariablesRequest.\n\t\t\t\tThe value should be less than or equal to 2147483647 (2^31-1).\n\t\t\t*/\n\t\t\tvariablesReference?: number;\n\t\t\t/** The number of named child variables.\n\t\t\t\tThe client can use this optional information to present the variables in a paged UI and fetch them in chunks.\n\t\t\t\tThe value should be less than or equal to 2147483647 (2^31-1).\n\t\t\t*/\n\t\t\tnamedVariables?: number;\n\t\t\t/** The number of indexed child variables.\n\t\t\t\tThe client can use this optional information to present the variables in a paged UI and fetch them in chunks.\n\t\t\t\tThe value should be less than or equal to 2147483647 (2^31-1).\n\t\t\t*/\n\t\t\tindexedVariables?: number;\n\t\t};\n\t}\n\n\t/** Source request; value of command field is 'source'.\n\t\tThe request retrieves the source code for a given source reference.\n\t*/\n\texport interface SourceRequest extends Request {\n\t\t// command: 'source';\n\t\targuments: SourceArguments;\n\t}\n\n\t/** Arguments for 'source' request. */\n\texport interface SourceArguments {\n\t\t/** Specifies the source content to load. Either source.path or source.sourceReference must be specified. */\n\t\tsource?: Source;\n\t\t/** The reference to the source. This is the same as source.sourceReference.\n\t\t\tThis is provided for backward compatibility since old backends do not understand the 'source' attribute.\n\t\t*/\n\t\tsourceReference: number;\n\t}\n\n\t/** Response to 'source' request. */\n\texport interface SourceResponse extends Response {\n\t\tbody: {\n\t\t\t/** Content of the source reference. */\n\t\t\tcontent: string;\n\t\t\t/** Optional content type (mime type) of the source. */\n\t\t\tmimeType?: string;\n\t\t};\n\t}\n\n\t/** Threads request; value of command field is 'threads'.\n\t\tThe request retrieves a list of all threads.\n\t*/\n\texport interface ThreadsRequest extends Request {\n\t\t// command: 'threads';\n\t}\n\n\t/** Response to 'threads' request. */\n\texport interface ThreadsResponse extends Response {\n\t\tbody: {\n\t\t\t/** All threads. */\n\t\t\tthreads: Thread[];\n\t\t};\n\t}\n\n\t/** TerminateThreads request; value of command field is 'terminateThreads'.\n\t\tThe request terminates the threads with the given ids.\n\t\tClients should only call this request if the capability 'supportsTerminateThreadsRequest' is true.\n\t*/\n\texport interface TerminateThreadsRequest extends Request {\n\t\t// command: 'terminateThreads';\n\t\targuments: TerminateThreadsArguments;\n\t}\n\n\t/** Arguments for 'terminateThreads' request. */\n\texport interface TerminateThreadsArguments {\n\t\t/** Ids of threads to be terminated. */\n\t\tthreadIds?: number[];\n\t}\n\n\t/** Response to 'terminateThreads' request. This is just an acknowledgement, so no body field is required. */\n\texport interface TerminateThreadsResponse extends Response {\n\t}\n\n\t/** Modules request; value of command field is 'modules'.\n\t\tModules can be retrieved from the debug adapter with this request which can either return all modules or a range of modules to support paging.\n\t\tClients should only call this request if the capability 'supportsModulesRequest' is true.\n\t*/\n\texport interface ModulesRequest extends Request {\n\t\t// command: 'modules';\n\t\targuments: ModulesArguments;\n\t}\n\n\t/** Arguments for 'modules' request. */\n\texport interface ModulesArguments {\n\t\t/** The index of the first module to return; if omitted modules start at 0. */\n\t\tstartModule?: number;\n\t\t/** The number of modules to return. If moduleCount is not specified or 0, all modules are returned. */\n\t\tmoduleCount?: number;\n\t}\n\n\t/** Response to 'modules' request. */\n\texport interface ModulesResponse extends Response {\n\t\tbody: {\n\t\t\t/** All modules or range of modules. */\n\t\t\tmodules: Module[];\n\t\t\t/** The total number of modules available. */\n\t\t\ttotalModules?: number;\n\t\t};\n\t}\n\n\t/** LoadedSources request; value of command field is 'loadedSources'.\n\t\tRetrieves the set of all sources currently loaded by the debugged process.\n\t\tClients should only call this request if the capability 'supportsLoadedSourcesRequest' is true.\n\t*/\n\texport interface LoadedSourcesRequest extends Request {\n\t\t// command: 'loadedSources';\n\t\targuments?: LoadedSourcesArguments;\n\t}\n\n\t/** Arguments for 'loadedSources' request. */\n\texport interface LoadedSourcesArguments {\n\t}\n\n\t/** Response to 'loadedSources' request. */\n\texport interface LoadedSourcesResponse extends Response {\n\t\tbody: {\n\t\t\t/** Set of loaded sources. */\n\t\t\tsources: Source[];\n\t\t};\n\t}\n\n\t/** Evaluate request; value of command field is 'evaluate'.\n\t\tEvaluates the given expression in the context of the top most stack frame.\n\t\tThe expression has access to any variables and arguments that are in scope.\n\t*/\n\texport interface EvaluateRequest extends Request {\n\t\t// command: 'evaluate';\n\t\targuments: EvaluateArguments;\n\t}\n\n\t/** Arguments for 'evaluate' request. */\n\texport interface EvaluateArguments {\n\t\t/** The expression to evaluate. */\n\t\texpression: string;\n\t\t/** Evaluate the expression in the scope of this stack frame. If not specified, the expression is evaluated in the global scope. */\n\t\tframeId?: number;\n\t\t/** The context in which the evaluate request is run.\n\t\t\tValues: \n\t\t\t'watch': evaluate is run in a watch.\n\t\t\t'repl': evaluate is run from REPL console.\n\t\t\t'hover': evaluate is run from a data hover.\n\t\t\t'clipboard': evaluate is run to generate the value that will be stored in the clipboard.\n\t\t\tThe attribute is only honored by a debug adapter if the capability 'supportsClipboardContext' is true.\n\t\t\tetc.\n\t\t*/\n\t\tcontext?: 'watch' | 'repl' | 'hover' | 'clipboard' | string;\n\t\t/** Specifies details on how to format the Evaluate result.\n\t\t\tThe attribute is only honored by a debug adapter if the capability 'supportsValueFormattingOptions' is true.\n\t\t*/\n\t\tformat?: ValueFormat;\n\t}\n\n\t/** Response to 'evaluate' request. */\n\texport interface EvaluateResponse extends Response {\n\t\tbody: {\n\t\t\t/** The result of the evaluate request. */\n\t\t\tresult: string;\n\t\t\t/** The optional type of the evaluate result.\n\t\t\t\tThis attribute should only be returned by a debug adapter if the client has passed the value true for the 'supportsVariableType' capability of the 'initialize' request.\n\t\t\t*/\n\t\t\ttype?: string;\n\t\t\t/** Properties of a evaluate result that can be used to determine how to render the result in the UI. */\n\t\t\tpresentationHint?: VariablePresentationHint;\n\t\t\t/** If variablesReference is > 0, the evaluate result is structured and its children can be retrieved by passing variablesReference to the VariablesRequest.\n\t\t\t\tThe value should be less than or equal to 2147483647 (2^31-1).\n\t\t\t*/\n\t\t\tvariablesReference: number;\n\t\t\t/** The number of named child variables.\n\t\t\t\tThe client can use this optional information to present the variables in a paged UI and fetch them in chunks.\n\t\t\t\tThe value should be less than or equal to 2147483647 (2^31-1).\n\t\t\t*/\n\t\t\tnamedVariables?: number;\n\t\t\t/** The number of indexed child variables.\n\t\t\t\tThe client can use this optional information to present the variables in a paged UI and fetch them in chunks.\n\t\t\t\tThe value should be less than or equal to 2147483647 (2^31-1).\n\t\t\t*/\n\t\t\tindexedVariables?: number;\n\t\t\t/** Optional memory reference to a location appropriate for this result.\n\t\t\t\tFor pointer type eval results, this is generally a reference to the memory address contained in the pointer.\n\t\t\t\tThis attribute should be returned by a debug adapter if the client has passed the value true for the 'supportsMemoryReferences' capability of the 'initialize' request.\n\t\t\t*/\n\t\t\tmemoryReference?: string;\n\t\t};\n\t}\n\n\t/** SetExpression request; value of command field is 'setExpression'.\n\t\tEvaluates the given 'value' expression and assigns it to the 'expression' which must be a modifiable l-value.\n\t\tThe expressions have access to any variables and arguments that are in scope of the specified frame.\n\t\tClients should only call this request if the capability 'supportsSetExpression' is true.\n\t\tIf a debug adapter implements both setExpression and setVariable, a client will only use setExpression if the variable has an evaluateName property.\n\t*/\n\texport interface SetExpressionRequest extends Request {\n\t\t// command: 'setExpression';\n\t\targuments: SetExpressionArguments;\n\t}\n\n\t/** Arguments for 'setExpression' request. */\n\texport interface SetExpressionArguments {\n\t\t/** The l-value expression to assign to. */\n\t\texpression: string;\n\t\t/** The value expression to assign to the l-value expression. */\n\t\tvalue: string;\n\t\t/** Evaluate the expressions in the scope of this stack frame. If not specified, the expressions are evaluated in the global scope. */\n\t\tframeId?: number;\n\t\t/** Specifies how the resulting value should be formatted. */\n\t\tformat?: ValueFormat;\n\t}\n\n\t/** Response to 'setExpression' request. */\n\texport interface SetExpressionResponse extends Response {\n\t\tbody: {\n\t\t\t/** The new value of the expression. */\n\t\t\tvalue: string;\n\t\t\t/** The optional type of the value.\n\t\t\t\tThis attribute should only be returned by a debug adapter if the client has passed the value true for the 'supportsVariableType' capability of the 'initialize' request.\n\t\t\t*/\n\t\t\ttype?: string;\n\t\t\t/** Properties of a value that can be used to determine how to render the result in the UI. */\n\t\t\tpresentationHint?: VariablePresentationHint;\n\t\t\t/** If variablesReference is > 0, the value is structured and its children can be retrieved by passing variablesReference to the VariablesRequest.\n\t\t\t\tThe value should be less than or equal to 2147483647 (2^31-1).\n\t\t\t*/\n\t\t\tvariablesReference?: number;\n\t\t\t/** The number of named child variables.\n\t\t\t\tThe client can use this optional information to present the variables in a paged UI and fetch them in chunks.\n\t\t\t\tThe value should be less than or equal to 2147483647 (2^31-1).\n\t\t\t*/\n\t\t\tnamedVariables?: number;\n\t\t\t/** The number of indexed child variables.\n\t\t\t\tThe client can use this optional information to present the variables in a paged UI and fetch them in chunks.\n\t\t\t\tThe value should be less than or equal to 2147483647 (2^31-1).\n\t\t\t*/\n\t\t\tindexedVariables?: number;\n\t\t};\n\t}\n\n\t/** StepInTargets request; value of command field is 'stepInTargets'.\n\t\tThis request retrieves the possible stepIn targets for the specified stack frame.\n\t\tThese targets can be used in the 'stepIn' request.\n\t\tThe StepInTargets may only be called if the 'supportsStepInTargetsRequest' capability exists and is true.\n\t\tClients should only call this request if the capability 'supportsStepInTargetsRequest' is true.\n\t*/\n\texport interface StepInTargetsRequest extends Request {\n\t\t// command: 'stepInTargets';\n\t\targuments: StepInTargetsArguments;\n\t}\n\n\t/** Arguments for 'stepInTargets' request. */\n\texport interface StepInTargetsArguments {\n\t\t/** The stack frame for which to retrieve the possible stepIn targets. */\n\t\tframeId: number;\n\t}\n\n\t/** Response to 'stepInTargets' request. */\n\texport interface StepInTargetsResponse extends Response {\n\t\tbody: {\n\t\t\t/** The possible stepIn targets of the specified source location. */\n\t\t\ttargets: StepInTarget[];\n\t\t};\n\t}\n\n\t/** GotoTargets request; value of command field is 'gotoTargets'.\n\t\tThis request retrieves the possible goto targets for the specified source location.\n\t\tThese targets can be used in the 'goto' request.\n\t\tClients should only call this request if the capability 'supportsGotoTargetsRequest' is true.\n\t*/\n\texport interface GotoTargetsRequest extends Request {\n\t\t// command: 'gotoTargets';\n\t\targuments: GotoTargetsArguments;\n\t}\n\n\t/** Arguments for 'gotoTargets' request. */\n\texport interface GotoTargetsArguments {\n\t\t/** The source location for which the goto targets are determined. */\n\t\tsource: Source;\n\t\t/** The line location for which the goto targets are determined. */\n\t\tline: number;\n\t\t/** An optional column location for which the goto targets are determined. */\n\t\tcolumn?: number;\n\t}\n\n\t/** Response to 'gotoTargets' request. */\n\texport interface GotoTargetsResponse extends Response {\n\t\tbody: {\n\t\t\t/** The possible goto targets of the specified location. */\n\t\t\ttargets: GotoTarget[];\n\t\t};\n\t}\n\n\t/** Completions request; value of command field is 'completions'.\n\t\tReturns a list of possible completions for a given caret position and text.\n\t\tClients should only call this request if the capability 'supportsCompletionsRequest' is true.\n\t*/\n\texport interface CompletionsRequest extends Request {\n\t\t// command: 'completions';\n\t\targuments: CompletionsArguments;\n\t}\n\n\t/** Arguments for 'completions' request. */\n\texport interface CompletionsArguments {\n\t\t/** Returns completions in the scope of this stack frame. If not specified, the completions are returned for the global scope. */\n\t\tframeId?: number;\n\t\t/** One or more source lines. Typically this is the text a user has typed into the debug console before he asked for completion. */\n\t\ttext: string;\n\t\t/** The character position for which to determine the completion proposals. */\n\t\tcolumn: number;\n\t\t/** An optional line for which to determine the completion proposals. If missing the first line of the text is assumed. */\n\t\tline?: number;\n\t}\n\n\t/** Response to 'completions' request. */\n\texport interface CompletionsResponse extends Response {\n\t\tbody: {\n\t\t\t/** The possible completions for . */\n\t\t\ttargets: CompletionItem[];\n\t\t};\n\t}\n\n\t/** ExceptionInfo request; value of command field is 'exceptionInfo'.\n\t\tRetrieves the details of the exception that caused this event to be raised.\n\t\tClients should only call this request if the capability 'supportsExceptionInfoRequest' is true.\n\t*/\n\texport interface ExceptionInfoRequest extends Request {\n\t\t// command: 'exceptionInfo';\n\t\targuments: ExceptionInfoArguments;\n\t}\n\n\t/** Arguments for 'exceptionInfo' request. */\n\texport interface ExceptionInfoArguments {\n\t\t/** Thread for which exception information should be retrieved. */\n\t\tthreadId: number;\n\t}\n\n\t/** Response to 'exceptionInfo' request. */\n\texport interface ExceptionInfoResponse extends Response {\n\t\tbody: {\n\t\t\t/** ID of the exception that was thrown. */\n\t\t\texceptionId: string;\n\t\t\t/** Descriptive text for the exception provided by the debug adapter. */\n\t\t\tdescription?: string;\n\t\t\t/** Mode that caused the exception notification to be raised. */\n\t\t\tbreakMode: ExceptionBreakMode;\n\t\t\t/** Detailed information about the exception. */\n\t\t\tdetails?: ExceptionDetails;\n\t\t};\n\t}\n\n\t/** ReadMemory request; value of command field is 'readMemory'.\n\t\tReads bytes from memory at the provided location.\n\t\tClients should only call this request if the capability 'supportsReadMemoryRequest' is true.\n\t*/\n\texport interface ReadMemoryRequest extends Request {\n\t\t// command: 'readMemory';\n\t\targuments: ReadMemoryArguments;\n\t}\n\n\t/** Arguments for 'readMemory' request. */\n\texport interface ReadMemoryArguments {\n\t\t/** Memory reference to the base location from which data should be read. */\n\t\tmemoryReference: string;\n\t\t/** Optional offset (in bytes) to be applied to the reference location before reading data. Can be negative. */\n\t\toffset?: number;\n\t\t/** Number of bytes to read at the specified location and offset. */\n\t\tcount: number;\n\t}\n\n\t/** Response to 'readMemory' request. */\n\texport interface ReadMemoryResponse extends Response {\n\t\tbody?: {\n\t\t\t/** The address of the first byte of data returned.\n\t\t\t\tTreated as a hex value if prefixed with '0x', or as a decimal value otherwise.\n\t\t\t*/\n\t\t\taddress: string;\n\t\t\t/** The number of unreadable bytes encountered after the last successfully read byte.\n\t\t\t\tThis can be used to determine the number of bytes that must be skipped before a subsequent 'readMemory' request will succeed.\n\t\t\t*/\n\t\t\tunreadableBytes?: number;\n\t\t\t/** The bytes read from memory, encoded using base64. */\n\t\t\tdata?: string;\n\t\t};\n\t}\n\n\t/** WriteMemory request; value of command field is 'writeMemory'.\n\t\tWrites bytes to memory at the provided location.\n\t\tClients should only call this request if the capability 'supportsWriteMemoryRequest' is true.\n\t*/\n\texport interface WriteMemoryRequest extends Request {\n\t\t// command: 'writeMemory';\n\t\targuments: WriteMemoryArguments;\n\t}\n\n\t/** Arguments for 'writeMemory' request. */\n\texport interface WriteMemoryArguments {\n\t\t/** Memory reference to the base location to which data should be written. */\n\t\tmemoryReference: string;\n\t\t/** Optional offset (in bytes) to be applied to the reference location before writing data. Can be negative. */\n\t\toffset?: number;\n\t\t/** Optional property to control partial writes. If true, the debug adapter should attempt to write memory even if the entire memory region is not writable. In such a case the debug adapter should stop after hitting the first byte of memory that cannot be written and return the number of bytes written in the response via the 'offset' and 'bytesWritten' properties.\n\t\t\tIf false or missing, a debug adapter should attempt to verify the region is writable before writing, and fail the response if it is not.\n\t\t*/\n\t\tallowPartial?: boolean;\n\t\t/** Bytes to write, encoded using base64. */\n\t\tdata: string;\n\t}\n\n\t/** Response to 'writeMemory' request. */\n\texport interface WriteMemoryResponse extends Response {\n\t\tbody?: {\n\t\t\t/** Optional property that should be returned when 'allowPartial' is true to indicate the offset of the first byte of data successfully written. Can be negative. */\n\t\t\toffset?: number;\n\t\t\t/** Optional property that should be returned when 'allowPartial' is true to indicate the number of bytes starting from address that were successfully written. */\n\t\t\tbytesWritten?: number;\n\t\t};\n\t}\n\n\t/** Disassemble request; value of command field is 'disassemble'.\n\t\tDisassembles code stored at the provided location.\n\t\tClients should only call this request if the capability 'supportsDisassembleRequest' is true.\n\t*/\n\texport interface DisassembleRequest extends Request {\n\t\t// command: 'disassemble';\n\t\targuments: DisassembleArguments;\n\t}\n\n\t/** Arguments for 'disassemble' request. */\n\texport interface DisassembleArguments {\n\t\t/** Memory reference to the base location containing the instructions to disassemble. */\n\t\tmemoryReference: string;\n\t\t/** Optional offset (in bytes) to be applied to the reference location before disassembling. Can be negative. */\n\t\toffset?: number;\n\t\t/** Optional offset (in instructions) to be applied after the byte offset (if any) before disassembling. Can be negative. */\n\t\tinstructionOffset?: number;\n\t\t/** Number of instructions to disassemble starting at the specified location and offset.\n\t\t\tAn adapter must return exactly this number of instructions - any unavailable instructions should be replaced with an implementation-defined 'invalid instruction' value.\n\t\t*/\n\t\tinstructionCount: number;\n\t\t/** If true, the adapter should attempt to resolve memory addresses and other values to symbolic names. */\n\t\tresolveSymbols?: boolean;\n\t}\n\n\t/** Response to 'disassemble' request. */\n\texport interface DisassembleResponse extends Response {\n\t\tbody?: {\n\t\t\t/** The list of disassembled instructions. */\n\t\t\tinstructions: DisassembledInstruction[];\n\t\t};\n\t}\n\n\t/** Information about the capabilities of a debug adapter. */\n\texport interface Capabilities {\n\t\t/** The debug adapter supports the 'configurationDone' request. */\n\t\tsupportsConfigurationDoneRequest?: boolean;\n\t\t/** The debug adapter supports function breakpoints. */\n\t\tsupportsFunctionBreakpoints?: boolean;\n\t\t/** The debug adapter supports conditional breakpoints. */\n\t\tsupportsConditionalBreakpoints?: boolean;\n\t\t/** The debug adapter supports breakpoints that break execution after a specified number of hits. */\n\t\tsupportsHitConditionalBreakpoints?: boolean;\n\t\t/** The debug adapter supports a (side effect free) evaluate request for data hovers. */\n\t\tsupportsEvaluateForHovers?: boolean;\n\t\t/** Available exception filter options for the 'setExceptionBreakpoints' request. */\n\t\texceptionBreakpointFilters?: ExceptionBreakpointsFilter[];\n\t\t/** The debug adapter supports stepping back via the 'stepBack' and 'reverseContinue' requests. */\n\t\tsupportsStepBack?: boolean;\n\t\t/** The debug adapter supports setting a variable to a value. */\n\t\tsupportsSetVariable?: boolean;\n\t\t/** The debug adapter supports restarting a frame. */\n\t\tsupportsRestartFrame?: boolean;\n\t\t/** The debug adapter supports the 'gotoTargets' request. */\n\t\tsupportsGotoTargetsRequest?: boolean;\n\t\t/** The debug adapter supports the 'stepInTargets' request. */\n\t\tsupportsStepInTargetsRequest?: boolean;\n\t\t/** The debug adapter supports the 'completions' request. */\n\t\tsupportsCompletionsRequest?: boolean;\n\t\t/** The set of characters that should trigger completion in a REPL. If not specified, the UI should assume the '.' character. */\n\t\tcompletionTriggerCharacters?: string[];\n\t\t/** The debug adapter supports the 'modules' request. */\n\t\tsupportsModulesRequest?: boolean;\n\t\t/** The set of additional module information exposed by the debug adapter. */\n\t\tadditionalModuleColumns?: ColumnDescriptor[];\n\t\t/** Checksum algorithms supported by the debug adapter. */\n\t\tsupportedChecksumAlgorithms?: ChecksumAlgorithm[];\n\t\t/** The debug adapter supports the 'restart' request. In this case a client should not implement 'restart' by terminating and relaunching the adapter but by calling the RestartRequest. */\n\t\tsupportsRestartRequest?: boolean;\n\t\t/** The debug adapter supports 'exceptionOptions' on the setExceptionBreakpoints request. */\n\t\tsupportsExceptionOptions?: boolean;\n\t\t/** The debug adapter supports a 'format' attribute on the stackTraceRequest, variablesRequest, and evaluateRequest. */\n\t\tsupportsValueFormattingOptions?: boolean;\n\t\t/** The debug adapter supports the 'exceptionInfo' request. */\n\t\tsupportsExceptionInfoRequest?: boolean;\n\t\t/** The debug adapter supports the 'terminateDebuggee' attribute on the 'disconnect' request. */\n\t\tsupportTerminateDebuggee?: boolean;\n\t\t/** The debug adapter supports the 'suspendDebuggee' attribute on the 'disconnect' request. */\n\t\tsupportSuspendDebuggee?: boolean;\n\t\t/** The debug adapter supports the delayed loading of parts of the stack, which requires that both the 'startFrame' and 'levels' arguments and an optional 'totalFrames' result of the 'StackTrace' request are supported. */\n\t\tsupportsDelayedStackTraceLoading?: boolean;\n\t\t/** The debug adapter supports the 'loadedSources' request. */\n\t\tsupportsLoadedSourcesRequest?: boolean;\n\t\t/** The debug adapter supports logpoints by interpreting the 'logMessage' attribute of the SourceBreakpoint. */\n\t\tsupportsLogPoints?: boolean;\n\t\t/** The debug adapter supports the 'terminateThreads' request. */\n\t\tsupportsTerminateThreadsRequest?: boolean;\n\t\t/** The debug adapter supports the 'setExpression' request. */\n\t\tsupportsSetExpression?: boolean;\n\t\t/** The debug adapter supports the 'terminate' request. */\n\t\tsupportsTerminateRequest?: boolean;\n\t\t/** The debug adapter supports data breakpoints. */\n\t\tsupportsDataBreakpoints?: boolean;\n\t\t/** The debug adapter supports the 'readMemory' request. */\n\t\tsupportsReadMemoryRequest?: boolean;\n\t\t/** The debug adapter supports the 'writeMemory' request. */\n\t\tsupportsWriteMemoryRequest?: boolean;\n\t\t/** The debug adapter supports the 'disassemble' request. */\n\t\tsupportsDisassembleRequest?: boolean;\n\t\t/** The debug adapter supports the 'cancel' request. */\n\t\tsupportsCancelRequest?: boolean;\n\t\t/** The debug adapter supports the 'breakpointLocations' request. */\n\t\tsupportsBreakpointLocationsRequest?: boolean;\n\t\t/** The debug adapter supports the 'clipboard' context value in the 'evaluate' request. */\n\t\tsupportsClipboardContext?: boolean;\n\t\t/** The debug adapter supports stepping granularities (argument 'granularity') for the stepping requests. */\n\t\tsupportsSteppingGranularity?: boolean;\n\t\t/** The debug adapter supports adding breakpoints based on instruction references. */\n\t\tsupportsInstructionBreakpoints?: boolean;\n\t\t/** The debug adapter supports 'filterOptions' as an argument on the 'setExceptionBreakpoints' request. */\n\t\tsupportsExceptionFilterOptions?: boolean;\n\t}\n\n\t/** An ExceptionBreakpointsFilter is shown in the UI as an filter option for configuring how exceptions are dealt with. */\n\texport interface ExceptionBreakpointsFilter {\n\t\t/** The internal ID of the filter option. This value is passed to the 'setExceptionBreakpoints' request. */\n\t\tfilter: string;\n\t\t/** The name of the filter option. This will be shown in the UI. */\n\t\tlabel: string;\n\t\t/** An optional help text providing additional information about the exception filter. This string is typically shown as a hover and must be translated. */\n\t\tdescription?: string;\n\t\t/** Initial value of the filter option. If not specified a value 'false' is assumed. */\n\t\tdefault?: boolean;\n\t\t/** Controls whether a condition can be specified for this filter option. If false or missing, a condition can not be set. */\n\t\tsupportsCondition?: boolean;\n\t\t/** An optional help text providing information about the condition. This string is shown as the placeholder text for a text box and must be translated. */\n\t\tconditionDescription?: string;\n\t}\n\n\t/** A structured message object. Used to return errors from requests. */\n\texport interface Message {\n\t\t/** Unique identifier for the message. */\n\t\tid: number;\n\t\t/** A format string for the message. Embedded variables have the form '{name}'.\n\t\t\tIf variable name starts with an underscore character, the variable does not contain user data (PII) and can be safely used for telemetry purposes.\n\t\t*/\n\t\tformat: string;\n\t\t/** An object used as a dictionary for looking up the variables in the format string. */\n\t\tvariables?: { [key: string]: string; };\n\t\t/** If true send to telemetry. */\n\t\tsendTelemetry?: boolean;\n\t\t/** If true show user. */\n\t\tshowUser?: boolean;\n\t\t/** An optional url where additional information about this message can be found. */\n\t\turl?: string;\n\t\t/** An optional label that is presented to the user as the UI for opening the url. */\n\t\turlLabel?: string;\n\t}\n\n\t/** A Module object represents a row in the modules view.\n\t\tTwo attributes are mandatory: an id identifies a module in the modules view and is used in a ModuleEvent for identifying a module for adding, updating or deleting.\n\t\tThe name is used to minimally render the module in the UI.\n\t\t\n\t\tAdditional attributes can be added to the module. They will show up in the module View if they have a corresponding ColumnDescriptor.\n\t\t\n\t\tTo avoid an unnecessary proliferation of additional attributes with similar semantics but different names\n\t\twe recommend to re-use attributes from the 'recommended' list below first, and only introduce new attributes if nothing appropriate could be found.\n\t*/\n\texport interface Module {\n\t\t/** Unique identifier for the module. */\n\t\tid: number | string;\n\t\t/** A name of the module. */\n\t\tname: string;\n\t\t/** optional but recommended attributes.\n\t\t\talways try to use these first before introducing additional attributes.\n\t\t\t\n\t\t\tLogical full path to the module. The exact definition is implementation defined, but usually this would be a full path to the on-disk file for the module.\n\t\t*/\n\t\tpath?: string;\n\t\t/** True if the module is optimized. */\n\t\tisOptimized?: boolean;\n\t\t/** True if the module is considered 'user code' by a debugger that supports 'Just My Code'. */\n\t\tisUserCode?: boolean;\n\t\t/** Version of Module. */\n\t\tversion?: string;\n\t\t/** User understandable description of if symbols were found for the module (ex: 'Symbols Loaded', 'Symbols not found', etc. */\n\t\tsymbolStatus?: string;\n\t\t/** Logical full path to the symbol file. The exact definition is implementation defined. */\n\t\tsymbolFilePath?: string;\n\t\t/** Module created or modified. */\n\t\tdateTimeStamp?: string;\n\t\t/** Address range covered by this module. */\n\t\taddressRange?: string;\n\t}\n\n\t/** A ColumnDescriptor specifies what module attribute to show in a column of the ModulesView, how to format it,\n\t\tand what the column's label should be.\n\t\tIt is only used if the underlying UI actually supports this level of customization.\n\t*/\n\texport interface ColumnDescriptor {\n\t\t/** Name of the attribute rendered in this column. */\n\t\tattributeName: string;\n\t\t/** Header UI label of column. */\n\t\tlabel: string;\n\t\t/** Format to use for the rendered values in this column. TBD how the format strings looks like. */\n\t\tformat?: string;\n\t\t/** Datatype of values in this column.  Defaults to 'string' if not specified. */\n\t\ttype?: 'string' | 'number' | 'boolean' | 'unixTimestampUTC';\n\t\t/** Width of this column in characters (hint only). */\n\t\twidth?: number;\n\t}\n\n\t/** The ModulesViewDescriptor is the container for all declarative configuration options of a ModuleView.\n\t\tFor now it only specifies the columns to be shown in the modules view.\n\t*/\n\texport interface ModulesViewDescriptor {\n\t\tcolumns: ColumnDescriptor[];\n\t}\n\n\t/** A Thread */\n\texport interface Thread {\n\t\t/** Unique identifier for the thread. */\n\t\tid: number;\n\t\t/** A name of the thread. */\n\t\tname: string;\n\t}\n\n\t/** A Source is a descriptor for source code.\n\t\tIt is returned from the debug adapter as part of a StackFrame and it is used by clients when specifying breakpoints.\n\t*/\n\texport interface Source {\n\t\t/** The short name of the source. Every source returned from the debug adapter has a name.\n\t\t\tWhen sending a source to the debug adapter this name is optional.\n\t\t*/\n\t\tname?: string;\n\t\t/** The path of the source to be shown in the UI.\n\t\t\tIt is only used to locate and load the content of the source if no sourceReference is specified (or its value is 0).\n\t\t*/\n\t\tpath?: string;\n\t\t/** If sourceReference > 0 the contents of the source must be retrieved through the SourceRequest (even if a path is specified).\n\t\t\tA sourceReference is only valid for a session, so it must not be used to persist a source.\n\t\t\tThe value should be less than or equal to 2147483647 (2^31-1).\n\t\t*/\n\t\tsourceReference?: number;\n\t\t/** An optional hint for how to present the source in the UI.\n\t\t\tA value of 'deemphasize' can be used to indicate that the source is not available or that it is skipped on stepping.\n\t\t*/\n\t\tpresentationHint?: 'normal' | 'emphasize' | 'deemphasize';\n\t\t/** The (optional) origin of this source: possible values 'internal module', 'inlined content from source map', etc. */\n\t\torigin?: string;\n\t\t/** An optional list of sources that are related to this source. These may be the source that generated this source. */\n\t\tsources?: Source[];\n\t\t/** Optional data that a debug adapter might want to loop through the client.\n\t\t\tThe client should leave the data intact and persist it across sessions. The client should not interpret the data.\n\t\t*/\n\t\tadapterData?: any;\n\t\t/** The checksums associated with this file. */\n\t\tchecksums?: Checksum[];\n\t}\n\n\t/** A Stackframe contains the source location. */\n\texport interface StackFrame {\n\t\t/** An identifier for the stack frame. It must be unique across all threads.\n\t\t\tThis id can be used to retrieve the scopes of the frame with the 'scopesRequest' or to restart the execution of a stackframe.\n\t\t*/\n\t\tid: number;\n\t\t/** The name of the stack frame, typically a method name. */\n\t\tname: string;\n\t\t/** The optional source of the frame. */\n\t\tsource?: Source;\n\t\t/** The line within the file of the frame. If source is null or doesn't exist, line is 0 and must be ignored. */\n\t\tline: number;\n\t\t/** The column within the line. If source is null or doesn't exist, column is 0 and must be ignored. */\n\t\tcolumn: number;\n\t\t/** An optional end line of the range covered by the stack frame. */\n\t\tendLine?: number;\n\t\t/** An optional end column of the range covered by the stack frame. */\n\t\tendColumn?: number;\n\t\t/** Indicates whether this frame can be restarted with the 'restart' request. Clients should only use this if the debug adapter supports the 'restart' request (capability 'supportsRestartRequest' is true). */\n\t\tcanRestart?: boolean;\n\t\t/** Optional memory reference for the current instruction pointer in this frame. */\n\t\tinstructionPointerReference?: string;\n\t\t/** The module associated with this frame, if any. */\n\t\tmoduleId?: number | string;\n\t\t/** An optional hint for how to present this frame in the UI.\n\t\t\tA value of 'label' can be used to indicate that the frame is an artificial frame that is used as a visual label or separator. A value of 'subtle' can be used to change the appearance of a frame in a 'subtle' way.\n\t\t*/\n\t\tpresentationHint?: 'normal' | 'label' | 'subtle';\n\t}\n\n\t/** A Scope is a named container for variables. Optionally a scope can map to a source or a range within a source. */\n\texport interface Scope {\n\t\t/** Name of the scope such as 'Arguments', 'Locals', or 'Registers'. This string is shown in the UI as is and can be translated. */\n\t\tname: string;\n\t\t/** An optional hint for how to present this scope in the UI. If this attribute is missing, the scope is shown with a generic UI.\n\t\t\tValues: \n\t\t\t'arguments': Scope contains method arguments.\n\t\t\t'locals': Scope contains local variables.\n\t\t\t'registers': Scope contains registers. Only a single 'registers' scope should be returned from a 'scopes' request.\n\t\t\tetc.\n\t\t*/\n\t\tpresentationHint?: 'arguments' | 'locals' | 'registers' | string;\n\t\t/** The variables of this scope can be retrieved by passing the value of variablesReference to the VariablesRequest. */\n\t\tvariablesReference: number;\n\t\t/** The number of named variables in this scope.\n\t\t\tThe client can use this optional information to present the variables in a paged UI and fetch them in chunks.\n\t\t*/\n\t\tnamedVariables?: number;\n\t\t/** The number of indexed variables in this scope.\n\t\t\tThe client can use this optional information to present the variables in a paged UI and fetch them in chunks.\n\t\t*/\n\t\tindexedVariables?: number;\n\t\t/** If true, the number of variables in this scope is large or expensive to retrieve. */\n\t\texpensive: boolean;\n\t\t/** Optional source for this scope. */\n\t\tsource?: Source;\n\t\t/** Optional start line of the range covered by this scope. */\n\t\tline?: number;\n\t\t/** Optional start column of the range covered by this scope. */\n\t\tcolumn?: number;\n\t\t/** Optional end line of the range covered by this scope. */\n\t\tendLine?: number;\n\t\t/** Optional end column of the range covered by this scope. */\n\t\tendColumn?: number;\n\t}\n\n\t/** A Variable is a name/value pair.\n\t\tOptionally a variable can have a 'type' that is shown if space permits or when hovering over the variable's name.\n\t\tAn optional 'kind' is used to render additional properties of the variable, e.g. different icons can be used to indicate that a variable is public or private.\n\t\tIf the value is structured (has children), a handle is provided to retrieve the children with the VariablesRequest.\n\t\tIf the number of named or indexed children is large, the numbers should be returned via the optional 'namedVariables' and 'indexedVariables' attributes.\n\t\tThe client can use this optional information to present the children in a paged UI and fetch them in chunks.\n\t*/\n\texport interface Variable {\n\t\t/** The variable's name. */\n\t\tname: string;\n\t\t/** The variable's value. This can be a multi-line text, e.g. for a function the body of a function. */\n\t\tvalue: string;\n\t\t/** The type of the variable's value. Typically shown in the UI when hovering over the value.\n\t\t\tThis attribute should only be returned by a debug adapter if the client has passed the value true for the 'supportsVariableType' capability of the 'initialize' request.\n\t\t*/\n\t\ttype?: string;\n\t\t/** Properties of a variable that can be used to determine how to render the variable in the UI. */\n\t\tpresentationHint?: VariablePresentationHint;\n\t\t/** Optional evaluatable name of this variable which can be passed to the 'EvaluateRequest' to fetch the variable's value. */\n\t\tevaluateName?: string;\n\t\t/** If variablesReference is > 0, the variable is structured and its children can be retrieved by passing variablesReference to the VariablesRequest. */\n\t\tvariablesReference: number;\n\t\t/** The number of named child variables.\n\t\t\tThe client can use this optional information to present the children in a paged UI and fetch them in chunks.\n\t\t*/\n\t\tnamedVariables?: number;\n\t\t/** The number of indexed child variables.\n\t\t\tThe client can use this optional information to present the children in a paged UI and fetch them in chunks.\n\t\t*/\n\t\tindexedVariables?: number;\n\t\t/** Optional memory reference for the variable if the variable represents executable code, such as a function pointer.\n\t\t\tThis attribute is only required if the client has passed the value true for the 'supportsMemoryReferences' capability of the 'initialize' request.\n\t\t*/\n\t\tmemoryReference?: string;\n\t}\n\n\t/** Optional properties of a variable that can be used to determine how to render the variable in the UI. */\n\texport interface VariablePresentationHint {\n\t\t/** The kind of variable. Before introducing additional values, try to use the listed values.\n\t\t\tValues: \n\t\t\t'property': Indicates that the object is a property.\n\t\t\t'method': Indicates that the object is a method.\n\t\t\t'class': Indicates that the object is a class.\n\t\t\t'data': Indicates that the object is data.\n\t\t\t'event': Indicates that the object is an event.\n\t\t\t'baseClass': Indicates that the object is a base class.\n\t\t\t'innerClass': Indicates that the object is an inner class.\n\t\t\t'interface': Indicates that the object is an interface.\n\t\t\t'mostDerivedClass': Indicates that the object is the most derived class.\n\t\t\t'virtual': Indicates that the object is virtual, that means it is a synthetic object introducedby the\n\t\t\tadapter for rendering purposes, e.g. an index range for large arrays.\n\t\t\t'dataBreakpoint': Deprecated: Indicates that a data breakpoint is registered for the object. The 'hasDataBreakpoint' attribute should generally be used instead.\n\t\t\tetc.\n\t\t*/\n\t\tkind?: 'property' | 'method' | 'class' | 'data' | 'event' | 'baseClass' | 'innerClass' | 'interface' | 'mostDerivedClass' | 'virtual' | 'dataBreakpoint' | string;\n\t\t/** Set of attributes represented as an array of strings. Before introducing additional values, try to use the listed values.\n\t\t\tValues: \n\t\t\t'static': Indicates that the object is static.\n\t\t\t'constant': Indicates that the object is a constant.\n\t\t\t'readOnly': Indicates that the object is read only.\n\t\t\t'rawString': Indicates that the object is a raw string.\n\t\t\t'hasObjectId': Indicates that the object can have an Object ID created for it.\n\t\t\t'canHaveObjectId': Indicates that the object has an Object ID associated with it.\n\t\t\t'hasSideEffects': Indicates that the evaluation had side effects.\n\t\t\t'hasDataBreakpoint': Indicates that the object has its value tracked by a data breakpoint.\n\t\t\tetc.\n\t\t*/\n\t\tattributes?: ('static' | 'constant' | 'readOnly' | 'rawString' | 'hasObjectId' | 'canHaveObjectId' | 'hasSideEffects' | 'hasDataBreakpoint' | string)[];\n\t\t/** Visibility of variable. Before introducing additional values, try to use the listed values.\n\t\t\tValues: 'public', 'private', 'protected', 'internal', 'final', etc.\n\t\t*/\n\t\tvisibility?: 'public' | 'private' | 'protected' | 'internal' | 'final' | string;\n\t}\n\n\t/** Properties of a breakpoint location returned from the 'breakpointLocations' request. */\n\texport interface BreakpointLocation {\n\t\t/** Start line of breakpoint location. */\n\t\tline: number;\n\t\t/** Optional start column of breakpoint location. */\n\t\tcolumn?: number;\n\t\t/** Optional end line of breakpoint location if the location covers a range. */\n\t\tendLine?: number;\n\t\t/** Optional end column of breakpoint location if the location covers a range. */\n\t\tendColumn?: number;\n\t}\n\n\t/** Properties of a breakpoint or logpoint passed to the setBreakpoints request. */\n\texport interface SourceBreakpoint {\n\t\t/** The source line of the breakpoint or logpoint. */\n\t\tline: number;\n\t\t/** An optional source column of the breakpoint. */\n\t\tcolumn?: number;\n\t\t/** An optional expression for conditional breakpoints.\n\t\t\tIt is only honored by a debug adapter if the capability 'supportsConditionalBreakpoints' is true.\n\t\t*/\n\t\tcondition?: string;\n\t\t/** An optional expression that controls how many hits of the breakpoint are ignored.\n\t\t\tThe backend is expected to interpret the expression as needed.\n\t\t\tThe attribute is only honored by a debug adapter if the capability 'supportsHitConditionalBreakpoints' is true.\n\t\t*/\n\t\thitCondition?: string;\n\t\t/** If this attribute exists and is non-empty, the backend must not 'break' (stop)\n\t\t\tbut log the message instead. Expressions within {} are interpolated.\n\t\t\tThe attribute is only honored by a debug adapter if the capability 'supportsLogPoints' is true.\n\t\t*/\n\t\tlogMessage?: string;\n\t}\n\n\t/** Properties of a breakpoint passed to the setFunctionBreakpoints request. */\n\texport interface FunctionBreakpoint {\n\t\t/** The name of the function. */\n\t\tname: string;\n\t\t/** An optional expression for conditional breakpoints.\n\t\t\tIt is only honored by a debug adapter if the capability 'supportsConditionalBreakpoints' is true.\n\t\t*/\n\t\tcondition?: string;\n\t\t/** An optional expression that controls how many hits of the breakpoint are ignored.\n\t\t\tThe backend is expected to interpret the expression as needed.\n\t\t\tThe attribute is only honored by a debug adapter if the capability 'supportsHitConditionalBreakpoints' is true.\n\t\t*/\n\t\thitCondition?: string;\n\t}\n\n\t/** This enumeration defines all possible access types for data breakpoints. */\n\texport type DataBreakpointAccessType = 'read' | 'write' | 'readWrite';\n\n\t/** Properties of a data breakpoint passed to the setDataBreakpoints request. */\n\texport interface DataBreakpoint {\n\t\t/** An id representing the data. This id is returned from the dataBreakpointInfo request. */\n\t\tdataId: string;\n\t\t/** The access type of the data. */\n\t\taccessType?: DataBreakpointAccessType;\n\t\t/** An optional expression for conditional breakpoints. */\n\t\tcondition?: string;\n\t\t/** An optional expression that controls how many hits of the breakpoint are ignored.\n\t\t\tThe backend is expected to interpret the expression as needed.\n\t\t*/\n\t\thitCondition?: string;\n\t}\n\n\t/** Properties of a breakpoint passed to the setInstructionBreakpoints request */\n\texport interface InstructionBreakpoint {\n\t\t/** The instruction reference of the breakpoint.\n\t\t\tThis should be a memory or instruction pointer reference from an EvaluateResponse, Variable, StackFrame, GotoTarget, or Breakpoint.\n\t\t*/\n\t\tinstructionReference: string;\n\t\t/** An optional offset from the instruction reference.\n\t\t\tThis can be negative.\n\t\t*/\n\t\toffset?: number;\n\t\t/** An optional expression for conditional breakpoints.\n\t\t\tIt is only honored by a debug adapter if the capability 'supportsConditionalBreakpoints' is true.\n\t\t*/\n\t\tcondition?: string;\n\t\t/** An optional expression that controls how many hits of the breakpoint are ignored.\n\t\t\tThe backend is expected to interpret the expression as needed.\n\t\t\tThe attribute is only honored by a debug adapter if the capability 'supportsHitConditionalBreakpoints' is true.\n\t\t*/\n\t\thitCondition?: string;\n\t}\n\n\t/** Information about a Breakpoint created in setBreakpoints, setFunctionBreakpoints, setInstructionBreakpoints, or setDataBreakpoints. */\n\texport interface Breakpoint {\n\t\t/** An optional identifier for the breakpoint. It is needed if breakpoint events are used to update or remove breakpoints. */\n\t\tid?: number;\n\t\t/** If true breakpoint could be set (but not necessarily at the desired location). */\n\t\tverified: boolean;\n\t\t/** An optional message about the state of the breakpoint.\n\t\t\tThis is shown to the user and can be used to explain why a breakpoint could not be verified.\n\t\t*/\n\t\tmessage?: string;\n\t\t/** The source where the breakpoint is located. */\n\t\tsource?: Source;\n\t\t/** The start line of the actual range covered by the breakpoint. */\n\t\tline?: number;\n\t\t/** An optional start column of the actual range covered by the breakpoint. */\n\t\tcolumn?: number;\n\t\t/** An optional end line of the actual range covered by the breakpoint. */\n\t\tendLine?: number;\n\t\t/** An optional end column of the actual range covered by the breakpoint.\n\t\t\tIf no end line is given, then the end column is assumed to be in the start line.\n\t\t*/\n\t\tendColumn?: number;\n\t\t/** An optional memory reference to where the breakpoint is set. */\n\t\tinstructionReference?: string;\n\t\t/** An optional offset from the instruction reference.\n\t\t\tThis can be negative.\n\t\t*/\n\t\toffset?: number;\n\t}\n\n\t/** The granularity of one 'step' in the stepping requests 'next', 'stepIn', 'stepOut', and 'stepBack'.\n\t\t'statement': The step should allow the program to run until the current statement has finished executing.\n\t\tThe meaning of a statement is determined by the adapter and it may be considered equivalent to a line.\n\t\tFor example 'for(int i = 0; i < 10; i++) could be considered to have 3 statements 'int i = 0', 'i < 10', and 'i++'.\n\t\t'line': The step should allow the program to run until the current source line has executed.\n\t\t'instruction': The step should allow one instruction to execute (e.g. one x86 instruction).\n\t*/\n\texport type SteppingGranularity = 'statement' | 'line' | 'instruction';\n\n\t/** A StepInTarget can be used in the 'stepIn' request and determines into which single target the stepIn request should step. */\n\texport interface StepInTarget {\n\t\t/** Unique identifier for a stepIn target. */\n\t\tid: number;\n\t\t/** The name of the stepIn target (shown in the UI). */\n\t\tlabel: string;\n\t}\n\n\t/** A GotoTarget describes a code location that can be used as a target in the 'goto' request.\n\t\tThe possible goto targets can be determined via the 'gotoTargets' request.\n\t*/\n\texport interface GotoTarget {\n\t\t/** Unique identifier for a goto target. This is used in the goto request. */\n\t\tid: number;\n\t\t/** The name of the goto target (shown in the UI). */\n\t\tlabel: string;\n\t\t/** The line of the goto target. */\n\t\tline: number;\n\t\t/** An optional column of the goto target. */\n\t\tcolumn?: number;\n\t\t/** An optional end line of the range covered by the goto target. */\n\t\tendLine?: number;\n\t\t/** An optional end column of the range covered by the goto target. */\n\t\tendColumn?: number;\n\t\t/** Optional memory reference for the instruction pointer value represented by this target. */\n\t\tinstructionPointerReference?: string;\n\t}\n\n\t/** CompletionItems are the suggestions returned from the CompletionsRequest. */\n\texport interface CompletionItem {\n\t\t/** The label of this completion item. By default this is also the text that is inserted when selecting this completion. */\n\t\tlabel: string;\n\t\t/** If text is not falsy then it is inserted instead of the label. */\n\t\ttext?: string;\n\t\t/** A string that should be used when comparing this item with other items. When `falsy` the label is used. */\n\t\tsortText?: string;\n\t\t/** The item's type. Typically the client uses this information to render the item in the UI with an icon. */\n\t\ttype?: CompletionItemType;\n\t\t/** This value determines the location (in the CompletionsRequest's 'text' attribute) where the completion text is added.\n\t\t\tIf missing the text is added at the location specified by the CompletionsRequest's 'column' attribute.\n\t\t*/\n\t\tstart?: number;\n\t\t/** This value determines how many characters are overwritten by the completion text.\n\t\t\tIf missing the value 0 is assumed which results in the completion text being inserted.\n\t\t*/\n\t\tlength?: number;\n\t\t/** Determines the start of the new selection after the text has been inserted (or replaced).\n\t\t\tThe start position must in the range 0 and length of the completion text.\n\t\t\tIf omitted the selection starts at the end of the completion text.\n\t\t*/\n\t\tselectionStart?: number;\n\t\t/** Determines the length of the new selection after the text has been inserted (or replaced).\n\t\t\tThe selection can not extend beyond the bounds of the completion text.\n\t\t\tIf omitted the length is assumed to be 0.\n\t\t*/\n\t\tselectionLength?: number;\n\t}\n\n\t/** Some predefined types for the CompletionItem. Please note that not all clients have specific icons for all of them. */\n\texport type CompletionItemType = 'method' | 'function' | 'constructor' | 'field' | 'variable' | 'class' | 'interface' | 'module' | 'property' | 'unit' | 'value' | 'enum' | 'keyword' | 'snippet' | 'text' | 'color' | 'file' | 'reference' | 'customcolor';\n\n\t/** Names of checksum algorithms that may be supported by a debug adapter. */\n\texport type ChecksumAlgorithm = 'MD5' | 'SHA1' | 'SHA256' | 'timestamp';\n\n\t/** The checksum of an item calculated by the specified algorithm. */\n\texport interface Checksum {\n\t\t/** The algorithm used to calculate this checksum. */\n\t\talgorithm: ChecksumAlgorithm;\n\t\t/** Value of the checksum. */\n\t\tchecksum: string;\n\t}\n\n\t/** Provides formatting information for a value. */\n\texport interface ValueFormat {\n\t\t/** Display the value in hex. */\n\t\thex?: boolean;\n\t}\n\n\t/** Provides formatting information for a stack frame. */\n\texport interface StackFrameFormat extends ValueFormat {\n\t\t/** Displays parameters for the stack frame. */\n\t\tparameters?: boolean;\n\t\t/** Displays the types of parameters for the stack frame. */\n\t\tparameterTypes?: boolean;\n\t\t/** Displays the names of parameters for the stack frame. */\n\t\tparameterNames?: boolean;\n\t\t/** Displays the values of parameters for the stack frame. */\n\t\tparameterValues?: boolean;\n\t\t/** Displays the line number of the stack frame. */\n\t\tline?: boolean;\n\t\t/** Displays the module of the stack frame. */\n\t\tmodule?: boolean;\n\t\t/** Includes all stack frames, including those the debug adapter might otherwise hide. */\n\t\tincludeAll?: boolean;\n\t}\n\n\t/** An ExceptionFilterOptions is used to specify an exception filter together with a condition for the setExceptionsFilter request. */\n\texport interface ExceptionFilterOptions {\n\t\t/** ID of an exception filter returned by the 'exceptionBreakpointFilters' capability. */\n\t\tfilterId: string;\n\t\t/** An optional expression for conditional exceptions.\n\t\t\tThe exception will break into the debugger if the result of the condition is true.\n\t\t*/\n\t\tcondition?: string;\n\t}\n\n\t/** An ExceptionOptions assigns configuration options to a set of exceptions. */\n\texport interface ExceptionOptions {\n\t\t/** A path that selects a single or multiple exceptions in a tree. If 'path' is missing, the whole tree is selected.\n\t\t\tBy convention the first segment of the path is a category that is used to group exceptions in the UI.\n\t\t*/\n\t\tpath?: ExceptionPathSegment[];\n\t\t/** Condition when a thrown exception should result in a break. */\n\t\tbreakMode: ExceptionBreakMode;\n\t}\n\n\t/** This enumeration defines all possible conditions when a thrown exception should result in a break.\n\t\tnever: never breaks,\n\t\talways: always breaks,\n\t\tunhandled: breaks when exception unhandled,\n\t\tuserUnhandled: breaks if the exception is not handled by user code.\n\t*/\n\texport type ExceptionBreakMode = 'never' | 'always' | 'unhandled' | 'userUnhandled';\n\n\t/** An ExceptionPathSegment represents a segment in a path that is used to match leafs or nodes in a tree of exceptions.\n\t\tIf a segment consists of more than one name, it matches the names provided if 'negate' is false or missing or\n\t\tit matches anything except the names provided if 'negate' is true.\n\t*/\n\texport interface ExceptionPathSegment {\n\t\t/** If false or missing this segment matches the names provided, otherwise it matches anything except the names provided. */\n\t\tnegate?: boolean;\n\t\t/** Depending on the value of 'negate' the names that should match or not match. */\n\t\tnames: string[];\n\t}\n\n\t/** Detailed information about an exception that has occurred. */\n\texport interface ExceptionDetails {\n\t\t/** Message contained in the exception. */\n\t\tmessage?: string;\n\t\t/** Short type name of the exception object. */\n\t\ttypeName?: string;\n\t\t/** Fully-qualified type name of the exception object. */\n\t\tfullTypeName?: string;\n\t\t/** Optional expression that can be evaluated in the current scope to obtain the exception object. */\n\t\tevaluateName?: string;\n\t\t/** Stack trace at the time the exception was thrown. */\n\t\tstackTrace?: string;\n\t\t/** Details of the exception contained by this exception, if any. */\n\t\tinnerException?: ExceptionDetails[];\n\t}\n\n\t/** Represents a single disassembled instruction. */\n\texport interface DisassembledInstruction {\n\t\t/** The address of the instruction. Treated as a hex value if prefixed with '0x', or as a decimal value otherwise. */\n\t\taddress: string;\n\t\t/** Optional raw bytes representing the instruction and its operands, in an implementation-defined format. */\n\t\tinstructionBytes?: string;\n\t\t/** Text representing the instruction and its operands, in an implementation-defined format. */\n\t\tinstruction: string;\n\t\t/** Name of the symbol that corresponds with the location of this instruction, if any. */\n\t\tsymbol?: string;\n\t\t/** Source location that corresponds to this instruction, if any.\n\t\t\tShould always be set (if available) on the first instruction returned,\n\t\t\tbut can be omitted afterwards if this instruction maps to the same source file as the previous instruction.\n\t\t*/\n\t\tlocation?: Source;\n\t\t/** The line within the source location that corresponds to this instruction, if any. */\n\t\tline?: number;\n\t\t/** The column within the line that corresponds to this instruction, if any. */\n\t\tcolumn?: number;\n\t\t/** The end line of the range that corresponds to this instruction, if any. */\n\t\tendLine?: number;\n\t\t/** The end column of the range that corresponds to this instruction, if any. */\n\t\tendColumn?: number;\n\t}\n\n\t/** Logical areas that can be invalidated by the 'invalidated' event.\n\t\tValues: \n\t\t'all': All previously fetched data has become invalid and needs to be refetched.\n\t\t'stacks': Previously fetched stack related data has become invalid and needs to be refetched.\n\t\t'threads': Previously fetched thread related data has become invalid and needs to be refetched.\n\t\t'variables': Previously fetched variable data has become invalid and needs to be refetched.\n\t\tetc.\n\t*/\n\texport type InvalidatedAreas = 'all' | 'stacks' | 'threads' | 'variables' | string;\n}\n\n"]}