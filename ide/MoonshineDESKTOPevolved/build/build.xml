<project name="MoonshineBuildScriptLibrary" basedir="." default="build" >
	<description>
	</description>
 	
	<!--
	//==========================================================================
	//
	//  PROPERTIES
	//
	//==========================================================================
	-->

	<!-- Read local properties -->
	<property file="local.properties"/>

	<!-- Read all environment properties -->
	<property environment="env"/>

	<tstamp>
		<format property="timestamp" pattern="yyyy-MM-dd_HH-mm-ss" />
		<format property="timestamp.time" pattern="MM/dd/yyyy hh:mm aa"/>
	</tstamp>

	<!-- ANCHOR - Tool Properties -->	
	<property name="JAVA_HOME" value="${env.JAVA_HOME}"/>
	<property name="FLEX_HOME" value="${env.FLEX_HOME}"/>
    <property name="adt.cmd" value="${FLEX_HOME}/lib/adt.jar"/>
	<property name="haxelib.cmd" value="haxelib"/>
	<property name="signtool.cmd" value="signtool"/>
	<property name="nsis.cmd" value="makensis"/>
	<taskdef 
		resource="net/sf/antcontrib/antcontrib.properties" 
		classpath="./ant-contrib-0.6.jar"/>
	<taskdef 
		resource="flexTasks.tasks" 
		classpath="${FLEX_HOME}/ant/lib/flexTasks.jar"/>
	
	<property name="build.is.development" value="true"/>
	<property name="build.number" value="0"/>

	<!-- ANCHOR - App Properties -->
	<if>
		<equals arg1="${build.is.development}" arg2="true"/>
		<then>
			<property name="app.id" value="net.prominic.moonshine-ide.development"/>
			<property name="app.title" value="Moonshine Development"/>
			<property name="app.name" value="MoonshineDevelopment" />
		</then>
		<else>
			<property name="app.id" value="net.prominic.moonshine-ide"/>
			<property name="app.title" value="Moonshine"/>
			<property name="app.name" value="Moonshine" />
		</else>			
	</if>
	<property name="app.version" value="1.0.0"/>

	<!-- Detect Operating System -->
	<condition property="is.windows">
		<os family="windows"/>
	</condition>
	<condition property="is.macos">
		<os family="mac"/>
	</condition>
	<condition property="is.linux">
		<and>
    		<os family="unix"/>
    		<not>
      			<os family="mac"/>
    		</not>
  		</and>
	</condition>
	
	<!--
	//==========================================================================
	//
	//  WORKFLOWS
	//
	//==========================================================================
	-->
	
	<!-- ANCHOR - Build Workflow -->
	<target name="build">
		<antcall>
			<target name="print-info"/>		
			<target name="init"/>
			<target name="modify-app-descriptor"/>
			<target name="install-haxe-dependencies"/>
			<target name="compile-gui-core"/>
			<target name="compile-swf"/>
			<target name="compile-app"/>
		</antcall>
	</target>

    <!-- ANCHOR - Print Info -->
    <target name="print-info">
        <echo message="Build Properties:"/>
		<echo message="=========="/>
		<echo message="Is Development: ${build.is.development}"/>
		<echo message="Is Debug: ${build.is.debug}"/>
		<echo message="OS: ${os.name}"/>
		<echo message=""/>
		<echo message="App Properties:"/>
		<echo message="=========="/>
		<echo message="App Name: ${app.name}"/>
		<echo message="App Title: ${app.title}"/>
		<echo message="App ID: ${app.id}"/>
		<echo message="App Version: ${app.version}"/>
		<echo message=""/>
		<echo message="Tools:"/>
		<echo message="=========="/>
		<echo message="Global JAVA_HOME: ${env.JAVA_HOME}"/>
		<echo message="Workflow JAVA_HOME: ${JAVA_HOME}"/>
		<echo message="FLEX_HOME: ${FLEX_HOME}"/>
		<echo message="adt command: ${adt.cmd}"/>
		<echo message="haxelib command: ${haxelib.cmd}"/>
		<echo message="signtool command: ${signtool.cmd}"/>
		<echo message="nsis command: ${nsis.cmd}"/>
    </target>

    <!-- ANCHOR - Init -->
	<target name="init">
		<mkdir dir="./bin"/>
		<mkdir dir="./bin/app"/>
		<mkdir dir="./bin/deploy"/>

		<java jar="${adt.cmd}" fork="true" failonerror="true">
			<arg line="-certificate" />
			<arg line="-cn MoonshineSelfSignedCertificate" />
			<arg line="2048-RSA" />
	   		<arg line="./bin/MoonshineSelfSignedCertificate.p12" />
	   		<arg line="moonshine"/>
		</java>
		<echo message="Created Self-Signed Certificate"/>
	</target>

	<!-- ANCHOR - Modify App Descriptor -->
	<target name="modify-app-descriptor">
		<copy file="../src/MoonshineDESKTOP-Windows-app.xml" todir="./bin" overwrite="true"/>

		<replaceregexp 
			file="./bin/MoonshineDESKTOP-Windows-app.xml" 
			match="filenameToBeReplacedByANT" 
			replace="${app.name}" />
		<replaceregexp 
			file="./bin/MoonshineDESKTOP-Windows-app.xml" 
			match="nameToBeReplacedByANT" 
			replace="${app.title} ${app.version}" 
			encoding="utf-8" />
		<replaceregexp 
			file="./bin/MoonshineDESKTOP-Windows-app.xml" 
			match="idToBeReplacedByANT" 
			replace="${app.id}" />
		<replaceregexp 
			file="./bin/MoonshineDESKTOP-Windows-app.xml" 
			match="0.0.0" 
			replace="${app.version}" />
		<replace 
			file="./bin/MoonshineDESKTOP-Windows-app.xml" 
			token="[This value will be overwritten by Flash Builder in the output app.xml]" 
			value="./bin/MoonshineSDKInstaller.swf" />
		<echo message="Modified App Descriptor"/>
	</target>

	<!-- ANCHOR - Install Haxe Dependencies -->
	<target name="install-haxe-dependencies">
		<haxelibInstall library="lime" />
		<haxelibInstall library="openfl" />
		<haxelibInstall library="feathersui" />
		<haxelibInstall library="actuate" />
		<haxelibInstall library="markdown-openfl-textfield" />
		<haxelibInstall library="format" />
		<haxelibInstall library="hxp" />
		<haxelibInstall library="amfio" />

		<exec executable="${haxelib.cmd}"
			failonerror="true">
			<arg value="git"/>
			<arg value="moonshine-openfl-language-client"/>
			<arg value="https://github.com/Moonshine-IDE/moonshine-openfl-language-client.git"/>
			<arg value="--always"/>
			<arg value="--quiet"/>
		</exec>

		<exec executable="${haxelib.cmd}"
			failonerror="true">
			<arg value="git"/>
			<arg value="moonshine-openfl-debug-adapter-client"/>
			<arg value="https://github.com/Moonshine-IDE/moonshine-openfl-debug-adapter-client.git"/>
			<arg value="--always"/>
			<arg value="--quiet"/>
		</exec>

		<exec executable="${haxelib.cmd}"
			failonerror="true">
			<arg value="git"/>
			<arg value="moonshine-feathersui-text-editor"/>
			<arg value="https://github.com/Moonshine-IDE/moonshine-feathersui-text-editor.git"/>
			<arg value="--always"/>
			<arg value="--quiet"/>
		</exec>

		<echo message="Installed Haxe Dependencies"/>
		<echo message=""/>
		<echo message="All Installed Haxelib Libraries:"/>
		<echo message="=========="/>
		<exec executable="${haxelib.cmd}">
			<arg value="list"/>
		</exec>
		
	</target>

	<!-- ANCHOR - Compile GUI Core -->
	<target name="compile-gui-core">
		<exec executable="${haxelib.cmd}"
			dir="../../MoonshineGUICore"
			failonerror="true">
			<arg value="run"/>
			<arg value="openfl"/>
			<arg value="build"/>
			<arg value="flash"/>
		</exec>
		<echo message="Compiled GUI Core"/>
	</target>

	<!-- ANCHOR - Compile SWF -->
	<target name="compile-swf">
		<exec executable="${JAVA_HOME}/bin/java" failonerror="true">
			<arg value="-Dflexcompiler=${FLEX_HOME}/bin/mxmlc"/>
			<arg value="-jar"/>
			<arg value="${FLEX_HOME}/lib/mxmlc.jar"/>
			
			<!-- Compiler arguments -->
			<arg value="+flexlib=${FLEX_HOME}/frameworks"/>
			<arg value="../src/MoonshineDESKTOP.mxml"/>
			<arg value="-output=./bin/MoonshineDESKTOP.swf"/>
			<arg value="-swf-version=44"/>
			<arg value="+configname=air"/>
			<arg value="-locale=en_US,ja_JP"/>
			<arg value="-optimize=true"/>
			<arg value="-debug=${build.is.debug}"/>
			<arg value="-actionscript-file-encoding=UTF-8"/>
			<arg value="-incremental=false"/>
			<arg value="-keep-generated-actionscript=false"/>
			<arg value="-allow-source-path-overlap=true"/>
			<arg value="+maxmemory=2048m"/>

			<!-- Define arguments -->
			<arg value="-define+=CONFIG::OSX,false"/>
			
			<!-- Source-path arguments -->
			<arg value="-source-path=../../MoonshineSharedCore/src"/>
			<arg value="-source-path=../../MoonshineSharedCore/src/locale/{locale}"/>
			<arg value="-source-path=../src"/>
			<arg value="-source-path=../../../../Moonshine-SDK-Installer/InstallerSharedCore/src"/>
			
			<!-- Library-path arguments -->
			<arg value="-library-path+=../libs"/>
			<arg value="-library-path+=../../MoonshineSharedCore/libs"/>
			<arg value="-library-path+=../../MoonshineGUICore/bin/flash/bin"/>
		</exec>
    	<echo message="Compiled SWF"/>
	</target>

	<target name="compile-app">
		<exec executable="${JAVA_HOME}/bin/java" failonerror="true">
			<arg line="-jar ${adt.cmd}"/>
			<arg line="-package" />
			<arg line="-storetype pkcs12" />
			<arg line="-keystore './bin/MoonshineSelfSignedCertificate.p12'" />
	   		<arg line="-storepass 'moonshine'" />
			<arg line="-tsa 'http://timestamp.digicert.com'" />
	   		<arg line="-target bundle"/>
	   		<arg line="bin/app" />
	   		<arg line="'./bin/MoonshineDESKTOP-Windows-app.xml'" />
	   		<arg line="'./bin/MoonshineDESKTOP.swf'" />
			<arg line="elements" />
			<arg line="installer"/>
			<arg line="tourDeFlex" />
			<arg line="defaultSDKs"/>
			<arg line="helperResources"/>
	   		<!-- Add folders to be bundled in the AIR file here -->
		</exec>
		<echo message="Compiled App"/>
	 </target>

	<macrodef name="haxelibInstall" description="Install a haxe library">
		<attribute name="library" />
		<attribute name="version" default="" />

		<sequential>
			<exec executable="${haxelib.cmd}" failonerror="true">
				<arg line="install @{library} @{version} --always --quiet" />
			</exec>		
		</sequential>
	</macrodef>

</project>