<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
// Copyright 2016 Prominic.NET, Inc.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
// http://www.apache.org/licenses/LICENSE-2.0 
// 
// Unless required by applicable law or agreed to in writing, software 
// distributed under the License is distributed on an "AS IS" BASIS, 
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and 
// limitations under the License
// 
// Author: Prominic.NET, Inc.
// No warranty of merchantability or fitness of any kind. 
// Use this software at your own risk.
////////////////////////////////////////////////////////////////////////////////
-->
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   implements="actionScripts.ui.IContentWindow"
		   xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		   backgroundColor="#FFFFFF" color="#686868" fontSize="14"
		   creationComplete="onAboutScreenCreationComplete(event)" remove="onTabRemoved(event)" xmlns:popup="components.popup.*">
	<fx:Script>
		<![CDATA[
		import actionScripts.events.GlobalEventDispatcher;
		import actionScripts.plugin.console.ConsoleOutputEvent;

		import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import actionScripts.locator.IDEModel;
			import actionScripts.locator.IDEWorker;
			import actionScripts.plugin.help.HelpPlugin;
			import actionScripts.valueObjects.ConstantsCoreVO;
			
			import components.popup.InfoBackgroundPopup;

			import spark.utils.TextFlowUtil;

			private var infoBackground:InfoBackgroundPopup;
	
			public function get longLabel():String
			{
				return "About Moonshine";
			}
	
			public function get label():String
			{
				return "About Moonshine";
			}
	
			public function isChanged():Boolean
			{
				return false;
			}
	
			public function isEmpty():Boolean
			{
				return false;
			}
	
			public function save():void
			{
			}
	
			private function onAboutScreenCreationComplete(event:FlexEvent):void
			{
				var versionString:String = IDEModel.getInstance().getVersionWithBuildNumber();
				if (ConstantsCoreVO.IS_MACOS && ConstantsCoreVO.IS_APP_STORE_VERSION) versionString += " (App Store Version)";

				var applicationDescriptor:XML = NativeApplication.nativeApplication.applicationDescriptor;
				var namespaceArraySplit:Array = (new Namespace(applicationDescriptor.namespace())).uri.split("/");
				var airVersion:Number = Number(namespaceArraySplit[namespaceArraySplit.length-1]);
				var isHarman:Boolean = airVersion > 32;
				versionString += ", Player: "+ airVersion +"("+ (isHarman ? "Harman" : "Adobe") +")";

				retVersion.textFlow = TextFlowUtil.importFromString(
						"<p>"+ versionString +"<br/><span fontSize=\"11\">Running On: "+ Capabilities.os +"</span></p>"
				);
			}
			
			protected function onInfoBackground(event:MouseEvent):void
			{
				if (!infoBackground)
				{
					infoBackground = PopUpManager.createPopUp(FlexGlobals.topLevelApplication as DisplayObject, InfoBackgroundPopup, true) as InfoBackgroundPopup;
					infoBackground.addEventListener(CloseEvent.CLOSE, handleInfoBackgroundPopupClose);
					infoBackground.height = screen.height - 100;
					
					PopUpManager.centerPopUp(infoBackground);
				}
				else
				{
					infoBackground.setFocus();
				}
			}
			
			private function handleInfoBackgroundPopupClose(event:CloseEvent):void
			{
				infoBackground.removeEventListener(CloseEvent.CLOSE, handleInfoBackgroundPopupClose);
				infoBackground = null;
			}
			
			protected function onSoftwareInformationRetreived(event:Event):void
			{
				hgTitle.removeElement(busy);
				btnClipboardCopy.includeInLayout = btnClipboardCopy.visible = true;
			}
			
			protected function onTabRemoved(event:Event):void
			{
				IDEWorker.getInstance().unSubscribeComponent(HelpPlugin.ABOUT_SUBSCRIBE_ID_TO_WORKER);
			}

			private function onCopyToClipboard(event:MouseEvent):void
			{
				var aboutInformation:String = ConstantsCoreVO.MOONSHINE_IDE_LABEL +"\n"+ retVersion.text +"\n\n";
				aboutInformation += "Configured SDKs in Moonshine:\n===========================================\n\n";
				aboutInformation += softwareInformation.getAllVersions();
				System.setClipboard(aboutInformation);
				GlobalEventDispatcher.getInstance().dispatchEvent(
						new ConsoleOutputEvent(ConsoleOutputEvent.CONSOLE_PRINT, "Copied Moonshine and SDK version information to clipboard.", false, false, ConsoleOutputEvent.TYPE_SUCCESS)
				);
			}
			
		]]>
	</fx:Script>
	
	<s:VGroup id="vgBody" 
			  width="80%" height="80%"
			  paddingLeft="12" paddingTop="9" paddingRight="13" paddingBottom="3"
			  horizontalCenter="0" verticalCenter="-12">
		<s:HGroup id="hgTitle" 
				  width="100%"
				  verticalAlign="middle">
			<s:Image source="/elements/moonshine_logo/logo_new_48.png"/>
			<s:VGroup autoLayout="true">
				<s:Label text="{ConstantsCoreVO.MOONSHINE_IDE_LABEL}" color="0x8a2a2a"
						 paddingLeft="8"/>
				<s:RichEditableText id="retVersion"
									width="100%" paddingLeft="8" paddingBottom="2"
									editable="false" focusEnabled="false"/>
			</s:VGroup>
			<s:Spacer width="100%"/>
			<s:BusyIndicator id="busy"/>
			<s:Button id="btnClipboardCopy"
					  icon="@Embed('/elements/images/copy_content_icon.png')" width="28"
					  toolTip="Copy Moonshine and SDK versions" visible="false" includeInLayout="false"
					  click="onCopyToClipboard(event)"/>
		</s:HGroup>
		<mx:HRule width="100%"/>
		<popup:SoftwareInformation id="softwareInformation"
								   width="100%" height="100%"
								   paddingTop="10"
								   complete="onSoftwareInformationRetreived(event)"/>
	</s:VGroup>
	
	<s:VGroup width="100%" height="20%"
			  verticalAlign="bottom" horizontalAlign="center" 
			  bottom="0" paddingBottom="10">
		<s:Label text="About the background image"
				 buttonMode="true"
				 textDecoration="underline" fontSize="12"
				 color="0x8a2a2a" paddingTop="20" click="onInfoBackground(event)"/>
		<s:Label text="{ConstantsCoreVO.MOONSHINE_IDE_COPYRIGHT_LABEL}"
				 fontSize="12"/>
	</s:VGroup>
</s:BorderContainer>